<?php
/**
 * ChargeTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Apache Fineract
 *
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@fineract.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Frengky\Fineract;

/**
 * ChargeTest Class Doc Comment
 *
 * @category    Class
 * @description Charge
 * @package     Frengky\Fineract
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ChargeTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Charge"
     */
    public function testCharge()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "amount"
     */
    public function testPropertyAmount()
    {
    }

    /**
     * Test attribute "currencyCode"
     */
    public function testPropertyCurrencyCode()
    {
    }

    /**
     * Test attribute "chargeTimeType"
     */
    public function testPropertyChargeTimeType()
    {
    }

    /**
     * Test attribute "chargeCalculation"
     */
    public function testPropertyChargeCalculation()
    {
    }

    /**
     * Test attribute "chargePaymentMode"
     */
    public function testPropertyChargePaymentMode()
    {
    }

    /**
     * Test attribute "feeInterval"
     */
    public function testPropertyFeeInterval()
    {
    }

    /**
     * Test attribute "penalty"
     */
    public function testPropertyPenalty()
    {
    }

    /**
     * Test attribute "active"
     */
    public function testPropertyActive()
    {
    }

    /**
     * Test attribute "deleted"
     */
    public function testPropertyDeleted()
    {
    }

    /**
     * Test attribute "minCap"
     */
    public function testPropertyMinCap()
    {
    }

    /**
     * Test attribute "maxCap"
     */
    public function testPropertyMaxCap()
    {
    }

    /**
     * Test attribute "account"
     */
    public function testPropertyAccount()
    {
    }

    /**
     * Test attribute "taxGroup"
     */
    public function testPropertyTaxGroup()
    {
    }

    /**
     * Test attribute "disbursementCharge"
     */
    public function testPropertyDisbursementCharge()
    {
    }

    /**
     * Test attribute "savingsCharge"
     */
    public function testPropertySavingsCharge()
    {
    }

    /**
     * Test attribute "feeOnMonthDay"
     */
    public function testPropertyFeeOnMonthDay()
    {
    }

    /**
     * Test attribute "annualFee"
     */
    public function testPropertyAnnualFee()
    {
    }

    /**
     * Test attribute "monthlyFee"
     */
    public function testPropertyMonthlyFee()
    {
    }

    /**
     * Test attribute "loanCharge"
     */
    public function testPropertyLoanCharge()
    {
    }

    /**
     * Test attribute "allowedLoanChargeTime"
     */
    public function testPropertyAllowedLoanChargeTime()
    {
    }

    /**
     * Test attribute "allowedClientChargeTime"
     */
    public function testPropertyAllowedClientChargeTime()
    {
    }

    /**
     * Test attribute "clientCharge"
     */
    public function testPropertyClientCharge()
    {
    }

    /**
     * Test attribute "allowedSavingsChargeTime"
     */
    public function testPropertyAllowedSavingsChargeTime()
    {
    }

    /**
     * Test attribute "percentageOfApprovedAmount"
     */
    public function testPropertyPercentageOfApprovedAmount()
    {
    }

    /**
     * Test attribute "overdueInstallment"
     */
    public function testPropertyOverdueInstallment()
    {
    }

    /**
     * Test attribute "allowedSavingsChargeCalculationType"
     */
    public function testPropertyAllowedSavingsChargeCalculationType()
    {
    }

    /**
     * Test attribute "allowedClientChargeCalculationType"
     */
    public function testPropertyAllowedClientChargeCalculationType()
    {
    }

    /**
     * Test attribute "percentageOfDisbursementAmount"
     */
    public function testPropertyPercentageOfDisbursementAmount()
    {
    }

    /**
     * Test attribute "new"
     */
    public function testPropertyNew()
    {
    }
}
