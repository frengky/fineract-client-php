<?php
/**
 * CommandWrapper
 *
 * PHP version 5
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Apache Fineract
 *
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@fineract.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Frengky\Fineract\Model;

use \ArrayAccess;
use \Frengky\Fineract\ObjectSerializer;

/**
 * CommandWrapper Class Doc Comment
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CommandWrapper implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CommandWrapper';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'groupId' => 'int',
'clientId' => 'int',
'loanId' => 'int',
'savingsId' => 'int',
'entityName' => 'string',
'taskPermissionName' => 'string',
'entityId' => 'int',
'subentityId' => 'int',
'href' => 'string',
'json' => 'string',
'transactionId' => 'string',
'productId' => 'int',
'creditBureauId' => 'int',
'organisationCreditBureauId' => 'int',
'create' => 'bool',
'createDatatable' => 'bool',
'deleteDatatable' => 'bool',
'updateDatatable' => 'bool',
'datatableResource' => 'bool',
'deleteOneToOne' => 'bool',
'deleteMultiple' => 'bool',
'updateOneToOne' => 'bool',
'updateMultiple' => 'bool',
'registerDatatable' => 'bool',
'noteResource' => 'bool',
'cacheResource' => 'bool',
'updateOperation' => 'bool',
'delete' => 'bool',
'deleteOperation' => 'bool',
'surveyResource' => 'bool',
'registerSurvey' => 'bool',
'fullFilSurvey' => 'bool',
'workingDaysResource' => 'bool',
'passwordPreferencesResource' => 'bool',
'permissionResource' => 'bool',
'userResource' => 'bool',
'currencyResource' => 'bool',
'loanDisburseDetailResource' => 'bool',
'updateDisbursementDate' => 'bool',
'update' => 'bool'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'groupId' => 'int64',
'clientId' => 'int64',
'loanId' => 'int64',
'savingsId' => 'int64',
'entityName' => null,
'taskPermissionName' => null,
'entityId' => 'int64',
'subentityId' => 'int64',
'href' => null,
'json' => null,
'transactionId' => null,
'productId' => 'int64',
'creditBureauId' => 'int64',
'organisationCreditBureauId' => 'int64',
'create' => null,
'createDatatable' => null,
'deleteDatatable' => null,
'updateDatatable' => null,
'datatableResource' => null,
'deleteOneToOne' => null,
'deleteMultiple' => null,
'updateOneToOne' => null,
'updateMultiple' => null,
'registerDatatable' => null,
'noteResource' => null,
'cacheResource' => null,
'updateOperation' => null,
'delete' => null,
'deleteOperation' => null,
'surveyResource' => null,
'registerSurvey' => null,
'fullFilSurvey' => null,
'workingDaysResource' => null,
'passwordPreferencesResource' => null,
'permissionResource' => null,
'userResource' => null,
'currencyResource' => null,
'loanDisburseDetailResource' => null,
'updateDisbursementDate' => null,
'update' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'groupId' => 'groupId',
'clientId' => 'clientId',
'loanId' => 'loanId',
'savingsId' => 'savingsId',
'entityName' => 'entityName',
'taskPermissionName' => 'taskPermissionName',
'entityId' => 'entityId',
'subentityId' => 'subentityId',
'href' => 'href',
'json' => 'json',
'transactionId' => 'transactionId',
'productId' => 'productId',
'creditBureauId' => 'creditBureauId',
'organisationCreditBureauId' => 'organisationCreditBureauId',
'create' => 'create',
'createDatatable' => 'createDatatable',
'deleteDatatable' => 'deleteDatatable',
'updateDatatable' => 'updateDatatable',
'datatableResource' => 'datatableResource',
'deleteOneToOne' => 'deleteOneToOne',
'deleteMultiple' => 'deleteMultiple',
'updateOneToOne' => 'updateOneToOne',
'updateMultiple' => 'updateMultiple',
'registerDatatable' => 'registerDatatable',
'noteResource' => 'noteResource',
'cacheResource' => 'cacheResource',
'updateOperation' => 'updateOperation',
'delete' => 'delete',
'deleteOperation' => 'deleteOperation',
'surveyResource' => 'surveyResource',
'registerSurvey' => 'registerSurvey',
'fullFilSurvey' => 'fullFilSurvey',
'workingDaysResource' => 'workingDaysResource',
'passwordPreferencesResource' => 'passwordPreferencesResource',
'permissionResource' => 'permissionResource',
'userResource' => 'userResource',
'currencyResource' => 'currencyResource',
'loanDisburseDetailResource' => 'loanDisburseDetailResource',
'updateDisbursementDate' => 'updateDisbursementDate',
'update' => 'update'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'groupId' => 'setGroupId',
'clientId' => 'setClientId',
'loanId' => 'setLoanId',
'savingsId' => 'setSavingsId',
'entityName' => 'setEntityName',
'taskPermissionName' => 'setTaskPermissionName',
'entityId' => 'setEntityId',
'subentityId' => 'setSubentityId',
'href' => 'setHref',
'json' => 'setJson',
'transactionId' => 'setTransactionId',
'productId' => 'setProductId',
'creditBureauId' => 'setCreditBureauId',
'organisationCreditBureauId' => 'setOrganisationCreditBureauId',
'create' => 'setCreate',
'createDatatable' => 'setCreateDatatable',
'deleteDatatable' => 'setDeleteDatatable',
'updateDatatable' => 'setUpdateDatatable',
'datatableResource' => 'setDatatableResource',
'deleteOneToOne' => 'setDeleteOneToOne',
'deleteMultiple' => 'setDeleteMultiple',
'updateOneToOne' => 'setUpdateOneToOne',
'updateMultiple' => 'setUpdateMultiple',
'registerDatatable' => 'setRegisterDatatable',
'noteResource' => 'setNoteResource',
'cacheResource' => 'setCacheResource',
'updateOperation' => 'setUpdateOperation',
'delete' => 'setDelete',
'deleteOperation' => 'setDeleteOperation',
'surveyResource' => 'setSurveyResource',
'registerSurvey' => 'setRegisterSurvey',
'fullFilSurvey' => 'setFullFilSurvey',
'workingDaysResource' => 'setWorkingDaysResource',
'passwordPreferencesResource' => 'setPasswordPreferencesResource',
'permissionResource' => 'setPermissionResource',
'userResource' => 'setUserResource',
'currencyResource' => 'setCurrencyResource',
'loanDisburseDetailResource' => 'setLoanDisburseDetailResource',
'updateDisbursementDate' => 'setUpdateDisbursementDate',
'update' => 'setUpdate'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'groupId' => 'getGroupId',
'clientId' => 'getClientId',
'loanId' => 'getLoanId',
'savingsId' => 'getSavingsId',
'entityName' => 'getEntityName',
'taskPermissionName' => 'getTaskPermissionName',
'entityId' => 'getEntityId',
'subentityId' => 'getSubentityId',
'href' => 'getHref',
'json' => 'getJson',
'transactionId' => 'getTransactionId',
'productId' => 'getProductId',
'creditBureauId' => 'getCreditBureauId',
'organisationCreditBureauId' => 'getOrganisationCreditBureauId',
'create' => 'getCreate',
'createDatatable' => 'getCreateDatatable',
'deleteDatatable' => 'getDeleteDatatable',
'updateDatatable' => 'getUpdateDatatable',
'datatableResource' => 'getDatatableResource',
'deleteOneToOne' => 'getDeleteOneToOne',
'deleteMultiple' => 'getDeleteMultiple',
'updateOneToOne' => 'getUpdateOneToOne',
'updateMultiple' => 'getUpdateMultiple',
'registerDatatable' => 'getRegisterDatatable',
'noteResource' => 'getNoteResource',
'cacheResource' => 'getCacheResource',
'updateOperation' => 'getUpdateOperation',
'delete' => 'getDelete',
'deleteOperation' => 'getDeleteOperation',
'surveyResource' => 'getSurveyResource',
'registerSurvey' => 'getRegisterSurvey',
'fullFilSurvey' => 'getFullFilSurvey',
'workingDaysResource' => 'getWorkingDaysResource',
'passwordPreferencesResource' => 'getPasswordPreferencesResource',
'permissionResource' => 'getPermissionResource',
'userResource' => 'getUserResource',
'currencyResource' => 'getCurrencyResource',
'loanDisburseDetailResource' => 'getLoanDisburseDetailResource',
'updateDisbursementDate' => 'getUpdateDisbursementDate',
'update' => 'getUpdate'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['groupId'] = isset($data['groupId']) ? $data['groupId'] : null;
        $this->container['clientId'] = isset($data['clientId']) ? $data['clientId'] : null;
        $this->container['loanId'] = isset($data['loanId']) ? $data['loanId'] : null;
        $this->container['savingsId'] = isset($data['savingsId']) ? $data['savingsId'] : null;
        $this->container['entityName'] = isset($data['entityName']) ? $data['entityName'] : null;
        $this->container['taskPermissionName'] = isset($data['taskPermissionName']) ? $data['taskPermissionName'] : null;
        $this->container['entityId'] = isset($data['entityId']) ? $data['entityId'] : null;
        $this->container['subentityId'] = isset($data['subentityId']) ? $data['subentityId'] : null;
        $this->container['href'] = isset($data['href']) ? $data['href'] : null;
        $this->container['json'] = isset($data['json']) ? $data['json'] : null;
        $this->container['transactionId'] = isset($data['transactionId']) ? $data['transactionId'] : null;
        $this->container['productId'] = isset($data['productId']) ? $data['productId'] : null;
        $this->container['creditBureauId'] = isset($data['creditBureauId']) ? $data['creditBureauId'] : null;
        $this->container['organisationCreditBureauId'] = isset($data['organisationCreditBureauId']) ? $data['organisationCreditBureauId'] : null;
        $this->container['create'] = isset($data['create']) ? $data['create'] : null;
        $this->container['createDatatable'] = isset($data['createDatatable']) ? $data['createDatatable'] : null;
        $this->container['deleteDatatable'] = isset($data['deleteDatatable']) ? $data['deleteDatatable'] : null;
        $this->container['updateDatatable'] = isset($data['updateDatatable']) ? $data['updateDatatable'] : null;
        $this->container['datatableResource'] = isset($data['datatableResource']) ? $data['datatableResource'] : null;
        $this->container['deleteOneToOne'] = isset($data['deleteOneToOne']) ? $data['deleteOneToOne'] : null;
        $this->container['deleteMultiple'] = isset($data['deleteMultiple']) ? $data['deleteMultiple'] : null;
        $this->container['updateOneToOne'] = isset($data['updateOneToOne']) ? $data['updateOneToOne'] : null;
        $this->container['updateMultiple'] = isset($data['updateMultiple']) ? $data['updateMultiple'] : null;
        $this->container['registerDatatable'] = isset($data['registerDatatable']) ? $data['registerDatatable'] : null;
        $this->container['noteResource'] = isset($data['noteResource']) ? $data['noteResource'] : null;
        $this->container['cacheResource'] = isset($data['cacheResource']) ? $data['cacheResource'] : null;
        $this->container['updateOperation'] = isset($data['updateOperation']) ? $data['updateOperation'] : null;
        $this->container['delete'] = isset($data['delete']) ? $data['delete'] : null;
        $this->container['deleteOperation'] = isset($data['deleteOperation']) ? $data['deleteOperation'] : null;
        $this->container['surveyResource'] = isset($data['surveyResource']) ? $data['surveyResource'] : null;
        $this->container['registerSurvey'] = isset($data['registerSurvey']) ? $data['registerSurvey'] : null;
        $this->container['fullFilSurvey'] = isset($data['fullFilSurvey']) ? $data['fullFilSurvey'] : null;
        $this->container['workingDaysResource'] = isset($data['workingDaysResource']) ? $data['workingDaysResource'] : null;
        $this->container['passwordPreferencesResource'] = isset($data['passwordPreferencesResource']) ? $data['passwordPreferencesResource'] : null;
        $this->container['permissionResource'] = isset($data['permissionResource']) ? $data['permissionResource'] : null;
        $this->container['userResource'] = isset($data['userResource']) ? $data['userResource'] : null;
        $this->container['currencyResource'] = isset($data['currencyResource']) ? $data['currencyResource'] : null;
        $this->container['loanDisburseDetailResource'] = isset($data['loanDisburseDetailResource']) ? $data['loanDisburseDetailResource'] : null;
        $this->container['updateDisbursementDate'] = isset($data['updateDisbursementDate']) ? $data['updateDisbursementDate'] : null;
        $this->container['update'] = isset($data['update']) ? $data['update'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets groupId
     *
     * @return int
     */
    public function getGroupId()
    {
        return $this->container['groupId'];
    }

    /**
     * Sets groupId
     *
     * @param int $groupId groupId
     *
     * @return $this
     */
    public function setGroupId($groupId)
    {
        $this->container['groupId'] = $groupId;

        return $this;
    }

    /**
     * Gets clientId
     *
     * @return int
     */
    public function getClientId()
    {
        return $this->container['clientId'];
    }

    /**
     * Sets clientId
     *
     * @param int $clientId clientId
     *
     * @return $this
     */
    public function setClientId($clientId)
    {
        $this->container['clientId'] = $clientId;

        return $this;
    }

    /**
     * Gets loanId
     *
     * @return int
     */
    public function getLoanId()
    {
        return $this->container['loanId'];
    }

    /**
     * Sets loanId
     *
     * @param int $loanId loanId
     *
     * @return $this
     */
    public function setLoanId($loanId)
    {
        $this->container['loanId'] = $loanId;

        return $this;
    }

    /**
     * Gets savingsId
     *
     * @return int
     */
    public function getSavingsId()
    {
        return $this->container['savingsId'];
    }

    /**
     * Sets savingsId
     *
     * @param int $savingsId savingsId
     *
     * @return $this
     */
    public function setSavingsId($savingsId)
    {
        $this->container['savingsId'] = $savingsId;

        return $this;
    }

    /**
     * Gets entityName
     *
     * @return string
     */
    public function getEntityName()
    {
        return $this->container['entityName'];
    }

    /**
     * Sets entityName
     *
     * @param string $entityName entityName
     *
     * @return $this
     */
    public function setEntityName($entityName)
    {
        $this->container['entityName'] = $entityName;

        return $this;
    }

    /**
     * Gets taskPermissionName
     *
     * @return string
     */
    public function getTaskPermissionName()
    {
        return $this->container['taskPermissionName'];
    }

    /**
     * Sets taskPermissionName
     *
     * @param string $taskPermissionName taskPermissionName
     *
     * @return $this
     */
    public function setTaskPermissionName($taskPermissionName)
    {
        $this->container['taskPermissionName'] = $taskPermissionName;

        return $this;
    }

    /**
     * Gets entityId
     *
     * @return int
     */
    public function getEntityId()
    {
        return $this->container['entityId'];
    }

    /**
     * Sets entityId
     *
     * @param int $entityId entityId
     *
     * @return $this
     */
    public function setEntityId($entityId)
    {
        $this->container['entityId'] = $entityId;

        return $this;
    }

    /**
     * Gets subentityId
     *
     * @return int
     */
    public function getSubentityId()
    {
        return $this->container['subentityId'];
    }

    /**
     * Sets subentityId
     *
     * @param int $subentityId subentityId
     *
     * @return $this
     */
    public function setSubentityId($subentityId)
    {
        $this->container['subentityId'] = $subentityId;

        return $this;
    }

    /**
     * Gets href
     *
     * @return string
     */
    public function getHref()
    {
        return $this->container['href'];
    }

    /**
     * Sets href
     *
     * @param string $href href
     *
     * @return $this
     */
    public function setHref($href)
    {
        $this->container['href'] = $href;

        return $this;
    }

    /**
     * Gets json
     *
     * @return string
     */
    public function getJson()
    {
        return $this->container['json'];
    }

    /**
     * Sets json
     *
     * @param string $json json
     *
     * @return $this
     */
    public function setJson($json)
    {
        $this->container['json'] = $json;

        return $this;
    }

    /**
     * Gets transactionId
     *
     * @return string
     */
    public function getTransactionId()
    {
        return $this->container['transactionId'];
    }

    /**
     * Sets transactionId
     *
     * @param string $transactionId transactionId
     *
     * @return $this
     */
    public function setTransactionId($transactionId)
    {
        $this->container['transactionId'] = $transactionId;

        return $this;
    }

    /**
     * Gets productId
     *
     * @return int
     */
    public function getProductId()
    {
        return $this->container['productId'];
    }

    /**
     * Sets productId
     *
     * @param int $productId productId
     *
     * @return $this
     */
    public function setProductId($productId)
    {
        $this->container['productId'] = $productId;

        return $this;
    }

    /**
     * Gets creditBureauId
     *
     * @return int
     */
    public function getCreditBureauId()
    {
        return $this->container['creditBureauId'];
    }

    /**
     * Sets creditBureauId
     *
     * @param int $creditBureauId creditBureauId
     *
     * @return $this
     */
    public function setCreditBureauId($creditBureauId)
    {
        $this->container['creditBureauId'] = $creditBureauId;

        return $this;
    }

    /**
     * Gets organisationCreditBureauId
     *
     * @return int
     */
    public function getOrganisationCreditBureauId()
    {
        return $this->container['organisationCreditBureauId'];
    }

    /**
     * Sets organisationCreditBureauId
     *
     * @param int $organisationCreditBureauId organisationCreditBureauId
     *
     * @return $this
     */
    public function setOrganisationCreditBureauId($organisationCreditBureauId)
    {
        $this->container['organisationCreditBureauId'] = $organisationCreditBureauId;

        return $this;
    }

    /**
     * Gets create
     *
     * @return bool
     */
    public function getCreate()
    {
        return $this->container['create'];
    }

    /**
     * Sets create
     *
     * @param bool $create create
     *
     * @return $this
     */
    public function setCreate($create)
    {
        $this->container['create'] = $create;

        return $this;
    }

    /**
     * Gets createDatatable
     *
     * @return bool
     */
    public function getCreateDatatable()
    {
        return $this->container['createDatatable'];
    }

    /**
     * Sets createDatatable
     *
     * @param bool $createDatatable createDatatable
     *
     * @return $this
     */
    public function setCreateDatatable($createDatatable)
    {
        $this->container['createDatatable'] = $createDatatable;

        return $this;
    }

    /**
     * Gets deleteDatatable
     *
     * @return bool
     */
    public function getDeleteDatatable()
    {
        return $this->container['deleteDatatable'];
    }

    /**
     * Sets deleteDatatable
     *
     * @param bool $deleteDatatable deleteDatatable
     *
     * @return $this
     */
    public function setDeleteDatatable($deleteDatatable)
    {
        $this->container['deleteDatatable'] = $deleteDatatable;

        return $this;
    }

    /**
     * Gets updateDatatable
     *
     * @return bool
     */
    public function getUpdateDatatable()
    {
        return $this->container['updateDatatable'];
    }

    /**
     * Sets updateDatatable
     *
     * @param bool $updateDatatable updateDatatable
     *
     * @return $this
     */
    public function setUpdateDatatable($updateDatatable)
    {
        $this->container['updateDatatable'] = $updateDatatable;

        return $this;
    }

    /**
     * Gets datatableResource
     *
     * @return bool
     */
    public function getDatatableResource()
    {
        return $this->container['datatableResource'];
    }

    /**
     * Sets datatableResource
     *
     * @param bool $datatableResource datatableResource
     *
     * @return $this
     */
    public function setDatatableResource($datatableResource)
    {
        $this->container['datatableResource'] = $datatableResource;

        return $this;
    }

    /**
     * Gets deleteOneToOne
     *
     * @return bool
     */
    public function getDeleteOneToOne()
    {
        return $this->container['deleteOneToOne'];
    }

    /**
     * Sets deleteOneToOne
     *
     * @param bool $deleteOneToOne deleteOneToOne
     *
     * @return $this
     */
    public function setDeleteOneToOne($deleteOneToOne)
    {
        $this->container['deleteOneToOne'] = $deleteOneToOne;

        return $this;
    }

    /**
     * Gets deleteMultiple
     *
     * @return bool
     */
    public function getDeleteMultiple()
    {
        return $this->container['deleteMultiple'];
    }

    /**
     * Sets deleteMultiple
     *
     * @param bool $deleteMultiple deleteMultiple
     *
     * @return $this
     */
    public function setDeleteMultiple($deleteMultiple)
    {
        $this->container['deleteMultiple'] = $deleteMultiple;

        return $this;
    }

    /**
     * Gets updateOneToOne
     *
     * @return bool
     */
    public function getUpdateOneToOne()
    {
        return $this->container['updateOneToOne'];
    }

    /**
     * Sets updateOneToOne
     *
     * @param bool $updateOneToOne updateOneToOne
     *
     * @return $this
     */
    public function setUpdateOneToOne($updateOneToOne)
    {
        $this->container['updateOneToOne'] = $updateOneToOne;

        return $this;
    }

    /**
     * Gets updateMultiple
     *
     * @return bool
     */
    public function getUpdateMultiple()
    {
        return $this->container['updateMultiple'];
    }

    /**
     * Sets updateMultiple
     *
     * @param bool $updateMultiple updateMultiple
     *
     * @return $this
     */
    public function setUpdateMultiple($updateMultiple)
    {
        $this->container['updateMultiple'] = $updateMultiple;

        return $this;
    }

    /**
     * Gets registerDatatable
     *
     * @return bool
     */
    public function getRegisterDatatable()
    {
        return $this->container['registerDatatable'];
    }

    /**
     * Sets registerDatatable
     *
     * @param bool $registerDatatable registerDatatable
     *
     * @return $this
     */
    public function setRegisterDatatable($registerDatatable)
    {
        $this->container['registerDatatable'] = $registerDatatable;

        return $this;
    }

    /**
     * Gets noteResource
     *
     * @return bool
     */
    public function getNoteResource()
    {
        return $this->container['noteResource'];
    }

    /**
     * Sets noteResource
     *
     * @param bool $noteResource noteResource
     *
     * @return $this
     */
    public function setNoteResource($noteResource)
    {
        $this->container['noteResource'] = $noteResource;

        return $this;
    }

    /**
     * Gets cacheResource
     *
     * @return bool
     */
    public function getCacheResource()
    {
        return $this->container['cacheResource'];
    }

    /**
     * Sets cacheResource
     *
     * @param bool $cacheResource cacheResource
     *
     * @return $this
     */
    public function setCacheResource($cacheResource)
    {
        $this->container['cacheResource'] = $cacheResource;

        return $this;
    }

    /**
     * Gets updateOperation
     *
     * @return bool
     */
    public function getUpdateOperation()
    {
        return $this->container['updateOperation'];
    }

    /**
     * Sets updateOperation
     *
     * @param bool $updateOperation updateOperation
     *
     * @return $this
     */
    public function setUpdateOperation($updateOperation)
    {
        $this->container['updateOperation'] = $updateOperation;

        return $this;
    }

    /**
     * Gets delete
     *
     * @return bool
     */
    public function getDelete()
    {
        return $this->container['delete'];
    }

    /**
     * Sets delete
     *
     * @param bool $delete delete
     *
     * @return $this
     */
    public function setDelete($delete)
    {
        $this->container['delete'] = $delete;

        return $this;
    }

    /**
     * Gets deleteOperation
     *
     * @return bool
     */
    public function getDeleteOperation()
    {
        return $this->container['deleteOperation'];
    }

    /**
     * Sets deleteOperation
     *
     * @param bool $deleteOperation deleteOperation
     *
     * @return $this
     */
    public function setDeleteOperation($deleteOperation)
    {
        $this->container['deleteOperation'] = $deleteOperation;

        return $this;
    }

    /**
     * Gets surveyResource
     *
     * @return bool
     */
    public function getSurveyResource()
    {
        return $this->container['surveyResource'];
    }

    /**
     * Sets surveyResource
     *
     * @param bool $surveyResource surveyResource
     *
     * @return $this
     */
    public function setSurveyResource($surveyResource)
    {
        $this->container['surveyResource'] = $surveyResource;

        return $this;
    }

    /**
     * Gets registerSurvey
     *
     * @return bool
     */
    public function getRegisterSurvey()
    {
        return $this->container['registerSurvey'];
    }

    /**
     * Sets registerSurvey
     *
     * @param bool $registerSurvey registerSurvey
     *
     * @return $this
     */
    public function setRegisterSurvey($registerSurvey)
    {
        $this->container['registerSurvey'] = $registerSurvey;

        return $this;
    }

    /**
     * Gets fullFilSurvey
     *
     * @return bool
     */
    public function getFullFilSurvey()
    {
        return $this->container['fullFilSurvey'];
    }

    /**
     * Sets fullFilSurvey
     *
     * @param bool $fullFilSurvey fullFilSurvey
     *
     * @return $this
     */
    public function setFullFilSurvey($fullFilSurvey)
    {
        $this->container['fullFilSurvey'] = $fullFilSurvey;

        return $this;
    }

    /**
     * Gets workingDaysResource
     *
     * @return bool
     */
    public function getWorkingDaysResource()
    {
        return $this->container['workingDaysResource'];
    }

    /**
     * Sets workingDaysResource
     *
     * @param bool $workingDaysResource workingDaysResource
     *
     * @return $this
     */
    public function setWorkingDaysResource($workingDaysResource)
    {
        $this->container['workingDaysResource'] = $workingDaysResource;

        return $this;
    }

    /**
     * Gets passwordPreferencesResource
     *
     * @return bool
     */
    public function getPasswordPreferencesResource()
    {
        return $this->container['passwordPreferencesResource'];
    }

    /**
     * Sets passwordPreferencesResource
     *
     * @param bool $passwordPreferencesResource passwordPreferencesResource
     *
     * @return $this
     */
    public function setPasswordPreferencesResource($passwordPreferencesResource)
    {
        $this->container['passwordPreferencesResource'] = $passwordPreferencesResource;

        return $this;
    }

    /**
     * Gets permissionResource
     *
     * @return bool
     */
    public function getPermissionResource()
    {
        return $this->container['permissionResource'];
    }

    /**
     * Sets permissionResource
     *
     * @param bool $permissionResource permissionResource
     *
     * @return $this
     */
    public function setPermissionResource($permissionResource)
    {
        $this->container['permissionResource'] = $permissionResource;

        return $this;
    }

    /**
     * Gets userResource
     *
     * @return bool
     */
    public function getUserResource()
    {
        return $this->container['userResource'];
    }

    /**
     * Sets userResource
     *
     * @param bool $userResource userResource
     *
     * @return $this
     */
    public function setUserResource($userResource)
    {
        $this->container['userResource'] = $userResource;

        return $this;
    }

    /**
     * Gets currencyResource
     *
     * @return bool
     */
    public function getCurrencyResource()
    {
        return $this->container['currencyResource'];
    }

    /**
     * Sets currencyResource
     *
     * @param bool $currencyResource currencyResource
     *
     * @return $this
     */
    public function setCurrencyResource($currencyResource)
    {
        $this->container['currencyResource'] = $currencyResource;

        return $this;
    }

    /**
     * Gets loanDisburseDetailResource
     *
     * @return bool
     */
    public function getLoanDisburseDetailResource()
    {
        return $this->container['loanDisburseDetailResource'];
    }

    /**
     * Sets loanDisburseDetailResource
     *
     * @param bool $loanDisburseDetailResource loanDisburseDetailResource
     *
     * @return $this
     */
    public function setLoanDisburseDetailResource($loanDisburseDetailResource)
    {
        $this->container['loanDisburseDetailResource'] = $loanDisburseDetailResource;

        return $this;
    }

    /**
     * Gets updateDisbursementDate
     *
     * @return bool
     */
    public function getUpdateDisbursementDate()
    {
        return $this->container['updateDisbursementDate'];
    }

    /**
     * Sets updateDisbursementDate
     *
     * @param bool $updateDisbursementDate updateDisbursementDate
     *
     * @return $this
     */
    public function setUpdateDisbursementDate($updateDisbursementDate)
    {
        $this->container['updateDisbursementDate'] = $updateDisbursementDate;

        return $this;
    }

    /**
     * Gets update
     *
     * @return bool
     */
    public function getUpdate()
    {
        return $this->container['update'];
    }

    /**
     * Sets update
     *
     * @param bool $update update
     *
     * @return $this
     */
    public function setUpdate($update)
    {
        $this->container['update'] = $update;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
