<?php
/**
 * GetLoanProductsTemplateResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Apache Fineract
 *
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@fineract.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Frengky\Fineract\Model;

use \ArrayAccess;
use \Frengky\Fineract\ObjectSerializer;

/**
 * GetLoanProductsTemplateResponse Class Doc Comment
 *
 * @category Class
 * @description GetLoanProductsTemplateResponse
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GetLoanProductsTemplateResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GetLoanProductsTemplateResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'includeInBorrowerCycle' => 'bool',
'useBorrowerCycle' => 'bool',
'currency' => '\Frengky\Fineract\Model\GetLoanProductsTemplateCurrency',
'repaymentFrequencyType' => '\Frengky\Fineract\Model\GetLoanProductsRepaymentTemplateFrequencyType',
'interestRateFrequencyType' => '\Frengky\Fineract\Model\GetLoanProductsInterestRateTemplateFrequencyType',
'amortizationType' => '\Frengky\Fineract\Model\GetLoanProductsAmortizationType',
'interestType' => '\Frengky\Fineract\Model\GetLoanProductsInterestTemplateType',
'interestCalculationPeriodType' => '\Frengky\Fineract\Model\GetLoansProductsInterestCalculationPeriodType',
'principalVariationsForBorrowerCycle' => 'int[]',
'interestRateVariationsForBorrowerCycle' => 'int[]',
'numberOfRepaymentVariationsForBorrowerCycle' => 'int[]',
'accountingRule' => '\Frengky\Fineract\Model\GetLoanProductsAccountingRule',
'daysInMonthType' => '\Frengky\Fineract\Model\GetLoansProductsDaysInMonthTemplateType',
'daysInYearType' => '\Frengky\Fineract\Model\GetLoanProductsDaysInYearTemplateType',
'isInterestRecalculationEnabled' => 'bool',
'interestRecalculationData' => '\Frengky\Fineract\Model\GetLoanProductsInterestRecalculationTemplateData',
'paymentTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsPaymentTypeOptions[]',
'currencyOptions' => '\Frengky\Fineract\Model\GetLoanProductsCurrencyOptions[]',
'repaymentFrequencyTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsRepaymentTemplateFrequencyType[]',
'preClosureInterestCalculationStrategyOptions' => '\Frengky\Fineract\Model\GetLoanProductsPreClosureInterestCalculationStrategy[]',
'interestRateFrequencyTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsInterestRateTemplateFrequencyType[]',
'amortizationTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsAmortizationType[]',
'interestTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsInterestTemplateType[]',
'interestCalculationPeriodTypeOptions' => '\Frengky\Fineract\Model\GetLoansProductsInterestCalculationPeriodType[]',
'transactionProcessingStrategyOptions' => '\Frengky\Fineract\Model\GetLoanProductsTransactionProcessingStrategyOptions[]',
'chargeOptions' => '\Frengky\Fineract\Model\GetLoanProductsChargeOptions[]',
'accountingRuleOptions' => '\Frengky\Fineract\Model\GetLoanProductsAccountingRule[]',
'accountingMappingOptions' => '\Frengky\Fineract\Model\GetLoanProductsAccountingMappingOptions',
'valueConditionTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsValueConditionTypeOptions[]',
'daysInMonthTypeOptions' => '\Frengky\Fineract\Model\GetLoansProductsDaysInMonthTemplateType[]',
'daysInYearTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsInterestTemplateType[]',
'interestRecalculationCompoundingTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsInterestRecalculationCompoundingType[]',
'rescheduleStrategyTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsRescheduleStrategyType[]',
'interestRecalculationFrequencyTypeOptions' => '\Frengky\Fineract\Model\GetLoanProductsInterestRecalculationCompoundingFrequencyType[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'includeInBorrowerCycle' => null,
'useBorrowerCycle' => null,
'currency' => null,
'repaymentFrequencyType' => null,
'interestRateFrequencyType' => null,
'amortizationType' => null,
'interestType' => null,
'interestCalculationPeriodType' => null,
'principalVariationsForBorrowerCycle' => 'int32',
'interestRateVariationsForBorrowerCycle' => 'int32',
'numberOfRepaymentVariationsForBorrowerCycle' => 'int32',
'accountingRule' => null,
'daysInMonthType' => null,
'daysInYearType' => null,
'isInterestRecalculationEnabled' => null,
'interestRecalculationData' => null,
'paymentTypeOptions' => null,
'currencyOptions' => null,
'repaymentFrequencyTypeOptions' => null,
'preClosureInterestCalculationStrategyOptions' => null,
'interestRateFrequencyTypeOptions' => null,
'amortizationTypeOptions' => null,
'interestTypeOptions' => null,
'interestCalculationPeriodTypeOptions' => null,
'transactionProcessingStrategyOptions' => null,
'chargeOptions' => null,
'accountingRuleOptions' => null,
'accountingMappingOptions' => null,
'valueConditionTypeOptions' => null,
'daysInMonthTypeOptions' => null,
'daysInYearTypeOptions' => null,
'interestRecalculationCompoundingTypeOptions' => null,
'rescheduleStrategyTypeOptions' => null,
'interestRecalculationFrequencyTypeOptions' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'includeInBorrowerCycle' => 'includeInBorrowerCycle',
'useBorrowerCycle' => 'useBorrowerCycle',
'currency' => 'currency',
'repaymentFrequencyType' => 'repaymentFrequencyType',
'interestRateFrequencyType' => 'interestRateFrequencyType',
'amortizationType' => 'amortizationType',
'interestType' => 'interestType',
'interestCalculationPeriodType' => 'interestCalculationPeriodType',
'principalVariationsForBorrowerCycle' => 'principalVariationsForBorrowerCycle',
'interestRateVariationsForBorrowerCycle' => 'interestRateVariationsForBorrowerCycle',
'numberOfRepaymentVariationsForBorrowerCycle' => 'numberOfRepaymentVariationsForBorrowerCycle',
'accountingRule' => 'accountingRule',
'daysInMonthType' => 'daysInMonthType',
'daysInYearType' => 'daysInYearType',
'isInterestRecalculationEnabled' => 'isInterestRecalculationEnabled',
'interestRecalculationData' => 'interestRecalculationData',
'paymentTypeOptions' => 'paymentTypeOptions',
'currencyOptions' => 'currencyOptions',
'repaymentFrequencyTypeOptions' => 'repaymentFrequencyTypeOptions',
'preClosureInterestCalculationStrategyOptions' => 'preClosureInterestCalculationStrategyOptions',
'interestRateFrequencyTypeOptions' => 'interestRateFrequencyTypeOptions',
'amortizationTypeOptions' => 'amortizationTypeOptions',
'interestTypeOptions' => 'interestTypeOptions',
'interestCalculationPeriodTypeOptions' => 'interestCalculationPeriodTypeOptions',
'transactionProcessingStrategyOptions' => 'transactionProcessingStrategyOptions',
'chargeOptions' => 'chargeOptions',
'accountingRuleOptions' => 'accountingRuleOptions',
'accountingMappingOptions' => 'accountingMappingOptions',
'valueConditionTypeOptions' => 'valueConditionTypeOptions',
'daysInMonthTypeOptions' => 'daysInMonthTypeOptions',
'daysInYearTypeOptions' => 'daysInYearTypeOptions',
'interestRecalculationCompoundingTypeOptions' => 'interestRecalculationCompoundingTypeOptions',
'rescheduleStrategyTypeOptions' => 'rescheduleStrategyTypeOptions',
'interestRecalculationFrequencyTypeOptions' => 'interestRecalculationFrequencyTypeOptions'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'includeInBorrowerCycle' => 'setIncludeInBorrowerCycle',
'useBorrowerCycle' => 'setUseBorrowerCycle',
'currency' => 'setCurrency',
'repaymentFrequencyType' => 'setRepaymentFrequencyType',
'interestRateFrequencyType' => 'setInterestRateFrequencyType',
'amortizationType' => 'setAmortizationType',
'interestType' => 'setInterestType',
'interestCalculationPeriodType' => 'setInterestCalculationPeriodType',
'principalVariationsForBorrowerCycle' => 'setPrincipalVariationsForBorrowerCycle',
'interestRateVariationsForBorrowerCycle' => 'setInterestRateVariationsForBorrowerCycle',
'numberOfRepaymentVariationsForBorrowerCycle' => 'setNumberOfRepaymentVariationsForBorrowerCycle',
'accountingRule' => 'setAccountingRule',
'daysInMonthType' => 'setDaysInMonthType',
'daysInYearType' => 'setDaysInYearType',
'isInterestRecalculationEnabled' => 'setIsInterestRecalculationEnabled',
'interestRecalculationData' => 'setInterestRecalculationData',
'paymentTypeOptions' => 'setPaymentTypeOptions',
'currencyOptions' => 'setCurrencyOptions',
'repaymentFrequencyTypeOptions' => 'setRepaymentFrequencyTypeOptions',
'preClosureInterestCalculationStrategyOptions' => 'setPreClosureInterestCalculationStrategyOptions',
'interestRateFrequencyTypeOptions' => 'setInterestRateFrequencyTypeOptions',
'amortizationTypeOptions' => 'setAmortizationTypeOptions',
'interestTypeOptions' => 'setInterestTypeOptions',
'interestCalculationPeriodTypeOptions' => 'setInterestCalculationPeriodTypeOptions',
'transactionProcessingStrategyOptions' => 'setTransactionProcessingStrategyOptions',
'chargeOptions' => 'setChargeOptions',
'accountingRuleOptions' => 'setAccountingRuleOptions',
'accountingMappingOptions' => 'setAccountingMappingOptions',
'valueConditionTypeOptions' => 'setValueConditionTypeOptions',
'daysInMonthTypeOptions' => 'setDaysInMonthTypeOptions',
'daysInYearTypeOptions' => 'setDaysInYearTypeOptions',
'interestRecalculationCompoundingTypeOptions' => 'setInterestRecalculationCompoundingTypeOptions',
'rescheduleStrategyTypeOptions' => 'setRescheduleStrategyTypeOptions',
'interestRecalculationFrequencyTypeOptions' => 'setInterestRecalculationFrequencyTypeOptions'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'includeInBorrowerCycle' => 'getIncludeInBorrowerCycle',
'useBorrowerCycle' => 'getUseBorrowerCycle',
'currency' => 'getCurrency',
'repaymentFrequencyType' => 'getRepaymentFrequencyType',
'interestRateFrequencyType' => 'getInterestRateFrequencyType',
'amortizationType' => 'getAmortizationType',
'interestType' => 'getInterestType',
'interestCalculationPeriodType' => 'getInterestCalculationPeriodType',
'principalVariationsForBorrowerCycle' => 'getPrincipalVariationsForBorrowerCycle',
'interestRateVariationsForBorrowerCycle' => 'getInterestRateVariationsForBorrowerCycle',
'numberOfRepaymentVariationsForBorrowerCycle' => 'getNumberOfRepaymentVariationsForBorrowerCycle',
'accountingRule' => 'getAccountingRule',
'daysInMonthType' => 'getDaysInMonthType',
'daysInYearType' => 'getDaysInYearType',
'isInterestRecalculationEnabled' => 'getIsInterestRecalculationEnabled',
'interestRecalculationData' => 'getInterestRecalculationData',
'paymentTypeOptions' => 'getPaymentTypeOptions',
'currencyOptions' => 'getCurrencyOptions',
'repaymentFrequencyTypeOptions' => 'getRepaymentFrequencyTypeOptions',
'preClosureInterestCalculationStrategyOptions' => 'getPreClosureInterestCalculationStrategyOptions',
'interestRateFrequencyTypeOptions' => 'getInterestRateFrequencyTypeOptions',
'amortizationTypeOptions' => 'getAmortizationTypeOptions',
'interestTypeOptions' => 'getInterestTypeOptions',
'interestCalculationPeriodTypeOptions' => 'getInterestCalculationPeriodTypeOptions',
'transactionProcessingStrategyOptions' => 'getTransactionProcessingStrategyOptions',
'chargeOptions' => 'getChargeOptions',
'accountingRuleOptions' => 'getAccountingRuleOptions',
'accountingMappingOptions' => 'getAccountingMappingOptions',
'valueConditionTypeOptions' => 'getValueConditionTypeOptions',
'daysInMonthTypeOptions' => 'getDaysInMonthTypeOptions',
'daysInYearTypeOptions' => 'getDaysInYearTypeOptions',
'interestRecalculationCompoundingTypeOptions' => 'getInterestRecalculationCompoundingTypeOptions',
'rescheduleStrategyTypeOptions' => 'getRescheduleStrategyTypeOptions',
'interestRecalculationFrequencyTypeOptions' => 'getInterestRecalculationFrequencyTypeOptions'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['includeInBorrowerCycle'] = isset($data['includeInBorrowerCycle']) ? $data['includeInBorrowerCycle'] : null;
        $this->container['useBorrowerCycle'] = isset($data['useBorrowerCycle']) ? $data['useBorrowerCycle'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['repaymentFrequencyType'] = isset($data['repaymentFrequencyType']) ? $data['repaymentFrequencyType'] : null;
        $this->container['interestRateFrequencyType'] = isset($data['interestRateFrequencyType']) ? $data['interestRateFrequencyType'] : null;
        $this->container['amortizationType'] = isset($data['amortizationType']) ? $data['amortizationType'] : null;
        $this->container['interestType'] = isset($data['interestType']) ? $data['interestType'] : null;
        $this->container['interestCalculationPeriodType'] = isset($data['interestCalculationPeriodType']) ? $data['interestCalculationPeriodType'] : null;
        $this->container['principalVariationsForBorrowerCycle'] = isset($data['principalVariationsForBorrowerCycle']) ? $data['principalVariationsForBorrowerCycle'] : null;
        $this->container['interestRateVariationsForBorrowerCycle'] = isset($data['interestRateVariationsForBorrowerCycle']) ? $data['interestRateVariationsForBorrowerCycle'] : null;
        $this->container['numberOfRepaymentVariationsForBorrowerCycle'] = isset($data['numberOfRepaymentVariationsForBorrowerCycle']) ? $data['numberOfRepaymentVariationsForBorrowerCycle'] : null;
        $this->container['accountingRule'] = isset($data['accountingRule']) ? $data['accountingRule'] : null;
        $this->container['daysInMonthType'] = isset($data['daysInMonthType']) ? $data['daysInMonthType'] : null;
        $this->container['daysInYearType'] = isset($data['daysInYearType']) ? $data['daysInYearType'] : null;
        $this->container['isInterestRecalculationEnabled'] = isset($data['isInterestRecalculationEnabled']) ? $data['isInterestRecalculationEnabled'] : null;
        $this->container['interestRecalculationData'] = isset($data['interestRecalculationData']) ? $data['interestRecalculationData'] : null;
        $this->container['paymentTypeOptions'] = isset($data['paymentTypeOptions']) ? $data['paymentTypeOptions'] : null;
        $this->container['currencyOptions'] = isset($data['currencyOptions']) ? $data['currencyOptions'] : null;
        $this->container['repaymentFrequencyTypeOptions'] = isset($data['repaymentFrequencyTypeOptions']) ? $data['repaymentFrequencyTypeOptions'] : null;
        $this->container['preClosureInterestCalculationStrategyOptions'] = isset($data['preClosureInterestCalculationStrategyOptions']) ? $data['preClosureInterestCalculationStrategyOptions'] : null;
        $this->container['interestRateFrequencyTypeOptions'] = isset($data['interestRateFrequencyTypeOptions']) ? $data['interestRateFrequencyTypeOptions'] : null;
        $this->container['amortizationTypeOptions'] = isset($data['amortizationTypeOptions']) ? $data['amortizationTypeOptions'] : null;
        $this->container['interestTypeOptions'] = isset($data['interestTypeOptions']) ? $data['interestTypeOptions'] : null;
        $this->container['interestCalculationPeriodTypeOptions'] = isset($data['interestCalculationPeriodTypeOptions']) ? $data['interestCalculationPeriodTypeOptions'] : null;
        $this->container['transactionProcessingStrategyOptions'] = isset($data['transactionProcessingStrategyOptions']) ? $data['transactionProcessingStrategyOptions'] : null;
        $this->container['chargeOptions'] = isset($data['chargeOptions']) ? $data['chargeOptions'] : null;
        $this->container['accountingRuleOptions'] = isset($data['accountingRuleOptions']) ? $data['accountingRuleOptions'] : null;
        $this->container['accountingMappingOptions'] = isset($data['accountingMappingOptions']) ? $data['accountingMappingOptions'] : null;
        $this->container['valueConditionTypeOptions'] = isset($data['valueConditionTypeOptions']) ? $data['valueConditionTypeOptions'] : null;
        $this->container['daysInMonthTypeOptions'] = isset($data['daysInMonthTypeOptions']) ? $data['daysInMonthTypeOptions'] : null;
        $this->container['daysInYearTypeOptions'] = isset($data['daysInYearTypeOptions']) ? $data['daysInYearTypeOptions'] : null;
        $this->container['interestRecalculationCompoundingTypeOptions'] = isset($data['interestRecalculationCompoundingTypeOptions']) ? $data['interestRecalculationCompoundingTypeOptions'] : null;
        $this->container['rescheduleStrategyTypeOptions'] = isset($data['rescheduleStrategyTypeOptions']) ? $data['rescheduleStrategyTypeOptions'] : null;
        $this->container['interestRecalculationFrequencyTypeOptions'] = isset($data['interestRecalculationFrequencyTypeOptions']) ? $data['interestRecalculationFrequencyTypeOptions'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets includeInBorrowerCycle
     *
     * @return bool
     */
    public function getIncludeInBorrowerCycle()
    {
        return $this->container['includeInBorrowerCycle'];
    }

    /**
     * Sets includeInBorrowerCycle
     *
     * @param bool $includeInBorrowerCycle includeInBorrowerCycle
     *
     * @return $this
     */
    public function setIncludeInBorrowerCycle($includeInBorrowerCycle)
    {
        $this->container['includeInBorrowerCycle'] = $includeInBorrowerCycle;

        return $this;
    }

    /**
     * Gets useBorrowerCycle
     *
     * @return bool
     */
    public function getUseBorrowerCycle()
    {
        return $this->container['useBorrowerCycle'];
    }

    /**
     * Sets useBorrowerCycle
     *
     * @param bool $useBorrowerCycle useBorrowerCycle
     *
     * @return $this
     */
    public function setUseBorrowerCycle($useBorrowerCycle)
    {
        $this->container['useBorrowerCycle'] = $useBorrowerCycle;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsTemplateCurrency
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsTemplateCurrency $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets repaymentFrequencyType
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsRepaymentTemplateFrequencyType
     */
    public function getRepaymentFrequencyType()
    {
        return $this->container['repaymentFrequencyType'];
    }

    /**
     * Sets repaymentFrequencyType
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsRepaymentTemplateFrequencyType $repaymentFrequencyType repaymentFrequencyType
     *
     * @return $this
     */
    public function setRepaymentFrequencyType($repaymentFrequencyType)
    {
        $this->container['repaymentFrequencyType'] = $repaymentFrequencyType;

        return $this;
    }

    /**
     * Gets interestRateFrequencyType
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsInterestRateTemplateFrequencyType
     */
    public function getInterestRateFrequencyType()
    {
        return $this->container['interestRateFrequencyType'];
    }

    /**
     * Sets interestRateFrequencyType
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsInterestRateTemplateFrequencyType $interestRateFrequencyType interestRateFrequencyType
     *
     * @return $this
     */
    public function setInterestRateFrequencyType($interestRateFrequencyType)
    {
        $this->container['interestRateFrequencyType'] = $interestRateFrequencyType;

        return $this;
    }

    /**
     * Gets amortizationType
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsAmortizationType
     */
    public function getAmortizationType()
    {
        return $this->container['amortizationType'];
    }

    /**
     * Sets amortizationType
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsAmortizationType $amortizationType amortizationType
     *
     * @return $this
     */
    public function setAmortizationType($amortizationType)
    {
        $this->container['amortizationType'] = $amortizationType;

        return $this;
    }

    /**
     * Gets interestType
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsInterestTemplateType
     */
    public function getInterestType()
    {
        return $this->container['interestType'];
    }

    /**
     * Sets interestType
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsInterestTemplateType $interestType interestType
     *
     * @return $this
     */
    public function setInterestType($interestType)
    {
        $this->container['interestType'] = $interestType;

        return $this;
    }

    /**
     * Gets interestCalculationPeriodType
     *
     * @return \Frengky\Fineract\Model\GetLoansProductsInterestCalculationPeriodType
     */
    public function getInterestCalculationPeriodType()
    {
        return $this->container['interestCalculationPeriodType'];
    }

    /**
     * Sets interestCalculationPeriodType
     *
     * @param \Frengky\Fineract\Model\GetLoansProductsInterestCalculationPeriodType $interestCalculationPeriodType interestCalculationPeriodType
     *
     * @return $this
     */
    public function setInterestCalculationPeriodType($interestCalculationPeriodType)
    {
        $this->container['interestCalculationPeriodType'] = $interestCalculationPeriodType;

        return $this;
    }

    /**
     * Gets principalVariationsForBorrowerCycle
     *
     * @return int[]
     */
    public function getPrincipalVariationsForBorrowerCycle()
    {
        return $this->container['principalVariationsForBorrowerCycle'];
    }

    /**
     * Sets principalVariationsForBorrowerCycle
     *
     * @param int[] $principalVariationsForBorrowerCycle principalVariationsForBorrowerCycle
     *
     * @return $this
     */
    public function setPrincipalVariationsForBorrowerCycle($principalVariationsForBorrowerCycle)
    {
        $this->container['principalVariationsForBorrowerCycle'] = $principalVariationsForBorrowerCycle;

        return $this;
    }

    /**
     * Gets interestRateVariationsForBorrowerCycle
     *
     * @return int[]
     */
    public function getInterestRateVariationsForBorrowerCycle()
    {
        return $this->container['interestRateVariationsForBorrowerCycle'];
    }

    /**
     * Sets interestRateVariationsForBorrowerCycle
     *
     * @param int[] $interestRateVariationsForBorrowerCycle interestRateVariationsForBorrowerCycle
     *
     * @return $this
     */
    public function setInterestRateVariationsForBorrowerCycle($interestRateVariationsForBorrowerCycle)
    {
        $this->container['interestRateVariationsForBorrowerCycle'] = $interestRateVariationsForBorrowerCycle;

        return $this;
    }

    /**
     * Gets numberOfRepaymentVariationsForBorrowerCycle
     *
     * @return int[]
     */
    public function getNumberOfRepaymentVariationsForBorrowerCycle()
    {
        return $this->container['numberOfRepaymentVariationsForBorrowerCycle'];
    }

    /**
     * Sets numberOfRepaymentVariationsForBorrowerCycle
     *
     * @param int[] $numberOfRepaymentVariationsForBorrowerCycle numberOfRepaymentVariationsForBorrowerCycle
     *
     * @return $this
     */
    public function setNumberOfRepaymentVariationsForBorrowerCycle($numberOfRepaymentVariationsForBorrowerCycle)
    {
        $this->container['numberOfRepaymentVariationsForBorrowerCycle'] = $numberOfRepaymentVariationsForBorrowerCycle;

        return $this;
    }

    /**
     * Gets accountingRule
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsAccountingRule
     */
    public function getAccountingRule()
    {
        return $this->container['accountingRule'];
    }

    /**
     * Sets accountingRule
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsAccountingRule $accountingRule accountingRule
     *
     * @return $this
     */
    public function setAccountingRule($accountingRule)
    {
        $this->container['accountingRule'] = $accountingRule;

        return $this;
    }

    /**
     * Gets daysInMonthType
     *
     * @return \Frengky\Fineract\Model\GetLoansProductsDaysInMonthTemplateType
     */
    public function getDaysInMonthType()
    {
        return $this->container['daysInMonthType'];
    }

    /**
     * Sets daysInMonthType
     *
     * @param \Frengky\Fineract\Model\GetLoansProductsDaysInMonthTemplateType $daysInMonthType daysInMonthType
     *
     * @return $this
     */
    public function setDaysInMonthType($daysInMonthType)
    {
        $this->container['daysInMonthType'] = $daysInMonthType;

        return $this;
    }

    /**
     * Gets daysInYearType
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsDaysInYearTemplateType
     */
    public function getDaysInYearType()
    {
        return $this->container['daysInYearType'];
    }

    /**
     * Sets daysInYearType
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsDaysInYearTemplateType $daysInYearType daysInYearType
     *
     * @return $this
     */
    public function setDaysInYearType($daysInYearType)
    {
        $this->container['daysInYearType'] = $daysInYearType;

        return $this;
    }

    /**
     * Gets isInterestRecalculationEnabled
     *
     * @return bool
     */
    public function getIsInterestRecalculationEnabled()
    {
        return $this->container['isInterestRecalculationEnabled'];
    }

    /**
     * Sets isInterestRecalculationEnabled
     *
     * @param bool $isInterestRecalculationEnabled isInterestRecalculationEnabled
     *
     * @return $this
     */
    public function setIsInterestRecalculationEnabled($isInterestRecalculationEnabled)
    {
        $this->container['isInterestRecalculationEnabled'] = $isInterestRecalculationEnabled;

        return $this;
    }

    /**
     * Gets interestRecalculationData
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsInterestRecalculationTemplateData
     */
    public function getInterestRecalculationData()
    {
        return $this->container['interestRecalculationData'];
    }

    /**
     * Sets interestRecalculationData
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsInterestRecalculationTemplateData $interestRecalculationData interestRecalculationData
     *
     * @return $this
     */
    public function setInterestRecalculationData($interestRecalculationData)
    {
        $this->container['interestRecalculationData'] = $interestRecalculationData;

        return $this;
    }

    /**
     * Gets paymentTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsPaymentTypeOptions[]
     */
    public function getPaymentTypeOptions()
    {
        return $this->container['paymentTypeOptions'];
    }

    /**
     * Sets paymentTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsPaymentTypeOptions[] $paymentTypeOptions paymentTypeOptions
     *
     * @return $this
     */
    public function setPaymentTypeOptions($paymentTypeOptions)
    {
        $this->container['paymentTypeOptions'] = $paymentTypeOptions;

        return $this;
    }

    /**
     * Gets currencyOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsCurrencyOptions[]
     */
    public function getCurrencyOptions()
    {
        return $this->container['currencyOptions'];
    }

    /**
     * Sets currencyOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsCurrencyOptions[] $currencyOptions currencyOptions
     *
     * @return $this
     */
    public function setCurrencyOptions($currencyOptions)
    {
        $this->container['currencyOptions'] = $currencyOptions;

        return $this;
    }

    /**
     * Gets repaymentFrequencyTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsRepaymentTemplateFrequencyType[]
     */
    public function getRepaymentFrequencyTypeOptions()
    {
        return $this->container['repaymentFrequencyTypeOptions'];
    }

    /**
     * Sets repaymentFrequencyTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsRepaymentTemplateFrequencyType[] $repaymentFrequencyTypeOptions repaymentFrequencyTypeOptions
     *
     * @return $this
     */
    public function setRepaymentFrequencyTypeOptions($repaymentFrequencyTypeOptions)
    {
        $this->container['repaymentFrequencyTypeOptions'] = $repaymentFrequencyTypeOptions;

        return $this;
    }

    /**
     * Gets preClosureInterestCalculationStrategyOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsPreClosureInterestCalculationStrategy[]
     */
    public function getPreClosureInterestCalculationStrategyOptions()
    {
        return $this->container['preClosureInterestCalculationStrategyOptions'];
    }

    /**
     * Sets preClosureInterestCalculationStrategyOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsPreClosureInterestCalculationStrategy[] $preClosureInterestCalculationStrategyOptions preClosureInterestCalculationStrategyOptions
     *
     * @return $this
     */
    public function setPreClosureInterestCalculationStrategyOptions($preClosureInterestCalculationStrategyOptions)
    {
        $this->container['preClosureInterestCalculationStrategyOptions'] = $preClosureInterestCalculationStrategyOptions;

        return $this;
    }

    /**
     * Gets interestRateFrequencyTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsInterestRateTemplateFrequencyType[]
     */
    public function getInterestRateFrequencyTypeOptions()
    {
        return $this->container['interestRateFrequencyTypeOptions'];
    }

    /**
     * Sets interestRateFrequencyTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsInterestRateTemplateFrequencyType[] $interestRateFrequencyTypeOptions interestRateFrequencyTypeOptions
     *
     * @return $this
     */
    public function setInterestRateFrequencyTypeOptions($interestRateFrequencyTypeOptions)
    {
        $this->container['interestRateFrequencyTypeOptions'] = $interestRateFrequencyTypeOptions;

        return $this;
    }

    /**
     * Gets amortizationTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsAmortizationType[]
     */
    public function getAmortizationTypeOptions()
    {
        return $this->container['amortizationTypeOptions'];
    }

    /**
     * Sets amortizationTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsAmortizationType[] $amortizationTypeOptions amortizationTypeOptions
     *
     * @return $this
     */
    public function setAmortizationTypeOptions($amortizationTypeOptions)
    {
        $this->container['amortizationTypeOptions'] = $amortizationTypeOptions;

        return $this;
    }

    /**
     * Gets interestTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsInterestTemplateType[]
     */
    public function getInterestTypeOptions()
    {
        return $this->container['interestTypeOptions'];
    }

    /**
     * Sets interestTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsInterestTemplateType[] $interestTypeOptions interestTypeOptions
     *
     * @return $this
     */
    public function setInterestTypeOptions($interestTypeOptions)
    {
        $this->container['interestTypeOptions'] = $interestTypeOptions;

        return $this;
    }

    /**
     * Gets interestCalculationPeriodTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoansProductsInterestCalculationPeriodType[]
     */
    public function getInterestCalculationPeriodTypeOptions()
    {
        return $this->container['interestCalculationPeriodTypeOptions'];
    }

    /**
     * Sets interestCalculationPeriodTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoansProductsInterestCalculationPeriodType[] $interestCalculationPeriodTypeOptions interestCalculationPeriodTypeOptions
     *
     * @return $this
     */
    public function setInterestCalculationPeriodTypeOptions($interestCalculationPeriodTypeOptions)
    {
        $this->container['interestCalculationPeriodTypeOptions'] = $interestCalculationPeriodTypeOptions;

        return $this;
    }

    /**
     * Gets transactionProcessingStrategyOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsTransactionProcessingStrategyOptions[]
     */
    public function getTransactionProcessingStrategyOptions()
    {
        return $this->container['transactionProcessingStrategyOptions'];
    }

    /**
     * Sets transactionProcessingStrategyOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsTransactionProcessingStrategyOptions[] $transactionProcessingStrategyOptions transactionProcessingStrategyOptions
     *
     * @return $this
     */
    public function setTransactionProcessingStrategyOptions($transactionProcessingStrategyOptions)
    {
        $this->container['transactionProcessingStrategyOptions'] = $transactionProcessingStrategyOptions;

        return $this;
    }

    /**
     * Gets chargeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsChargeOptions[]
     */
    public function getChargeOptions()
    {
        return $this->container['chargeOptions'];
    }

    /**
     * Sets chargeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsChargeOptions[] $chargeOptions chargeOptions
     *
     * @return $this
     */
    public function setChargeOptions($chargeOptions)
    {
        $this->container['chargeOptions'] = $chargeOptions;

        return $this;
    }

    /**
     * Gets accountingRuleOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsAccountingRule[]
     */
    public function getAccountingRuleOptions()
    {
        return $this->container['accountingRuleOptions'];
    }

    /**
     * Sets accountingRuleOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsAccountingRule[] $accountingRuleOptions accountingRuleOptions
     *
     * @return $this
     */
    public function setAccountingRuleOptions($accountingRuleOptions)
    {
        $this->container['accountingRuleOptions'] = $accountingRuleOptions;

        return $this;
    }

    /**
     * Gets accountingMappingOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsAccountingMappingOptions
     */
    public function getAccountingMappingOptions()
    {
        return $this->container['accountingMappingOptions'];
    }

    /**
     * Sets accountingMappingOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsAccountingMappingOptions $accountingMappingOptions accountingMappingOptions
     *
     * @return $this
     */
    public function setAccountingMappingOptions($accountingMappingOptions)
    {
        $this->container['accountingMappingOptions'] = $accountingMappingOptions;

        return $this;
    }

    /**
     * Gets valueConditionTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsValueConditionTypeOptions[]
     */
    public function getValueConditionTypeOptions()
    {
        return $this->container['valueConditionTypeOptions'];
    }

    /**
     * Sets valueConditionTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsValueConditionTypeOptions[] $valueConditionTypeOptions valueConditionTypeOptions
     *
     * @return $this
     */
    public function setValueConditionTypeOptions($valueConditionTypeOptions)
    {
        $this->container['valueConditionTypeOptions'] = $valueConditionTypeOptions;

        return $this;
    }

    /**
     * Gets daysInMonthTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoansProductsDaysInMonthTemplateType[]
     */
    public function getDaysInMonthTypeOptions()
    {
        return $this->container['daysInMonthTypeOptions'];
    }

    /**
     * Sets daysInMonthTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoansProductsDaysInMonthTemplateType[] $daysInMonthTypeOptions daysInMonthTypeOptions
     *
     * @return $this
     */
    public function setDaysInMonthTypeOptions($daysInMonthTypeOptions)
    {
        $this->container['daysInMonthTypeOptions'] = $daysInMonthTypeOptions;

        return $this;
    }

    /**
     * Gets daysInYearTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsInterestTemplateType[]
     */
    public function getDaysInYearTypeOptions()
    {
        return $this->container['daysInYearTypeOptions'];
    }

    /**
     * Sets daysInYearTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsInterestTemplateType[] $daysInYearTypeOptions daysInYearTypeOptions
     *
     * @return $this
     */
    public function setDaysInYearTypeOptions($daysInYearTypeOptions)
    {
        $this->container['daysInYearTypeOptions'] = $daysInYearTypeOptions;

        return $this;
    }

    /**
     * Gets interestRecalculationCompoundingTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsInterestRecalculationCompoundingType[]
     */
    public function getInterestRecalculationCompoundingTypeOptions()
    {
        return $this->container['interestRecalculationCompoundingTypeOptions'];
    }

    /**
     * Sets interestRecalculationCompoundingTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsInterestRecalculationCompoundingType[] $interestRecalculationCompoundingTypeOptions interestRecalculationCompoundingTypeOptions
     *
     * @return $this
     */
    public function setInterestRecalculationCompoundingTypeOptions($interestRecalculationCompoundingTypeOptions)
    {
        $this->container['interestRecalculationCompoundingTypeOptions'] = $interestRecalculationCompoundingTypeOptions;

        return $this;
    }

    /**
     * Gets rescheduleStrategyTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsRescheduleStrategyType[]
     */
    public function getRescheduleStrategyTypeOptions()
    {
        return $this->container['rescheduleStrategyTypeOptions'];
    }

    /**
     * Sets rescheduleStrategyTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsRescheduleStrategyType[] $rescheduleStrategyTypeOptions rescheduleStrategyTypeOptions
     *
     * @return $this
     */
    public function setRescheduleStrategyTypeOptions($rescheduleStrategyTypeOptions)
    {
        $this->container['rescheduleStrategyTypeOptions'] = $rescheduleStrategyTypeOptions;

        return $this;
    }

    /**
     * Gets interestRecalculationFrequencyTypeOptions
     *
     * @return \Frengky\Fineract\Model\GetLoanProductsInterestRecalculationCompoundingFrequencyType[]
     */
    public function getInterestRecalculationFrequencyTypeOptions()
    {
        return $this->container['interestRecalculationFrequencyTypeOptions'];
    }

    /**
     * Sets interestRecalculationFrequencyTypeOptions
     *
     * @param \Frengky\Fineract\Model\GetLoanProductsInterestRecalculationCompoundingFrequencyType[] $interestRecalculationFrequencyTypeOptions interestRecalculationFrequencyTypeOptions
     *
     * @return $this
     */
    public function setInterestRecalculationFrequencyTypeOptions($interestRecalculationFrequencyTypeOptions)
    {
        $this->container['interestRecalculationFrequencyTypeOptions'] = $interestRecalculationFrequencyTypeOptions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
