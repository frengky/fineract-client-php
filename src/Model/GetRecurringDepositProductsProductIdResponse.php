<?php
/**
 * GetRecurringDepositProductsProductIdResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Apache Fineract
 *
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@fineract.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Frengky\Fineract\Model;

use \ArrayAccess;
use \Frengky\Fineract\ObjectSerializer;

/**
 * GetRecurringDepositProductsProductIdResponse Class Doc Comment
 *
 * @category Class
 * @description GetRecurringDepositProductsProductIdResponse
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GetRecurringDepositProductsProductIdResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GetRecurringDepositProductsProductIdResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
'name' => 'string',
'shortName' => 'string',
'description' => 'string',
'currency' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdCurrency',
'interestCompoundingPeriodType' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdInterestCompoundingPeriodType',
'interestPostingPeriodType' => '\Frengky\Fineract\Model\GetRecurringDepositProductsInterestPostingPeriodType',
'interestCalculationType' => '\Frengky\Fineract\Model\GetRecurringDepositProductsInterestCalculationType',
'interestCalculationDaysInYearType' => '\Frengky\Fineract\Model\GetRecurringDepositProductsInterestCalculationDaysInYearType',
'accountingMappings' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdAccountingMappings',
'feeToIncomeAccountMappings' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings[]',
'penaltyToIncomeAccountMappings' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings[]',
'recurringDepositFrequency' => 'int',
'recurringDepositFrequencyType' => '\Frengky\Fineract\Model\GetRecurringDepositProductsRecurringDepositFrequencyType',
'preClosurePenalApplicable' => 'bool',
'preClosurePenalInterest' => 'double',
'preClosurePenalInterestOnType' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType',
'minDepositTerm' => 'int',
'minDepositTermType' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdMinDepositTermType',
'maxDepositTerm' => 'int',
'maxDepositTermType' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdMaxDepositTermType',
'activeChart' => '\Frengky\Fineract\Model\GetRecurringDepositProductsProductIdActiveChart'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
'name' => null,
'shortName' => null,
'description' => null,
'currency' => null,
'interestCompoundingPeriodType' => null,
'interestPostingPeriodType' => null,
'interestCalculationType' => null,
'interestCalculationDaysInYearType' => null,
'accountingMappings' => null,
'feeToIncomeAccountMappings' => null,
'penaltyToIncomeAccountMappings' => null,
'recurringDepositFrequency' => 'int32',
'recurringDepositFrequencyType' => null,
'preClosurePenalApplicable' => null,
'preClosurePenalInterest' => 'double',
'preClosurePenalInterestOnType' => null,
'minDepositTerm' => 'int32',
'minDepositTermType' => null,
'maxDepositTerm' => 'int32',
'maxDepositTermType' => null,
'activeChart' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'name' => 'name',
'shortName' => 'shortName',
'description' => 'description',
'currency' => 'currency',
'interestCompoundingPeriodType' => 'interestCompoundingPeriodType',
'interestPostingPeriodType' => 'interestPostingPeriodType',
'interestCalculationType' => 'interestCalculationType',
'interestCalculationDaysInYearType' => 'interestCalculationDaysInYearType',
'accountingMappings' => 'accountingMappings',
'feeToIncomeAccountMappings' => 'feeToIncomeAccountMappings',
'penaltyToIncomeAccountMappings' => 'penaltyToIncomeAccountMappings',
'recurringDepositFrequency' => 'recurringDepositFrequency',
'recurringDepositFrequencyType' => 'recurringDepositFrequencyType',
'preClosurePenalApplicable' => 'preClosurePenalApplicable',
'preClosurePenalInterest' => 'preClosurePenalInterest',
'preClosurePenalInterestOnType' => 'preClosurePenalInterestOnType',
'minDepositTerm' => 'minDepositTerm',
'minDepositTermType' => 'minDepositTermType',
'maxDepositTerm' => 'maxDepositTerm',
'maxDepositTermType' => 'maxDepositTermType',
'activeChart' => 'activeChart'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'name' => 'setName',
'shortName' => 'setShortName',
'description' => 'setDescription',
'currency' => 'setCurrency',
'interestCompoundingPeriodType' => 'setInterestCompoundingPeriodType',
'interestPostingPeriodType' => 'setInterestPostingPeriodType',
'interestCalculationType' => 'setInterestCalculationType',
'interestCalculationDaysInYearType' => 'setInterestCalculationDaysInYearType',
'accountingMappings' => 'setAccountingMappings',
'feeToIncomeAccountMappings' => 'setFeeToIncomeAccountMappings',
'penaltyToIncomeAccountMappings' => 'setPenaltyToIncomeAccountMappings',
'recurringDepositFrequency' => 'setRecurringDepositFrequency',
'recurringDepositFrequencyType' => 'setRecurringDepositFrequencyType',
'preClosurePenalApplicable' => 'setPreClosurePenalApplicable',
'preClosurePenalInterest' => 'setPreClosurePenalInterest',
'preClosurePenalInterestOnType' => 'setPreClosurePenalInterestOnType',
'minDepositTerm' => 'setMinDepositTerm',
'minDepositTermType' => 'setMinDepositTermType',
'maxDepositTerm' => 'setMaxDepositTerm',
'maxDepositTermType' => 'setMaxDepositTermType',
'activeChart' => 'setActiveChart'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'name' => 'getName',
'shortName' => 'getShortName',
'description' => 'getDescription',
'currency' => 'getCurrency',
'interestCompoundingPeriodType' => 'getInterestCompoundingPeriodType',
'interestPostingPeriodType' => 'getInterestPostingPeriodType',
'interestCalculationType' => 'getInterestCalculationType',
'interestCalculationDaysInYearType' => 'getInterestCalculationDaysInYearType',
'accountingMappings' => 'getAccountingMappings',
'feeToIncomeAccountMappings' => 'getFeeToIncomeAccountMappings',
'penaltyToIncomeAccountMappings' => 'getPenaltyToIncomeAccountMappings',
'recurringDepositFrequency' => 'getRecurringDepositFrequency',
'recurringDepositFrequencyType' => 'getRecurringDepositFrequencyType',
'preClosurePenalApplicable' => 'getPreClosurePenalApplicable',
'preClosurePenalInterest' => 'getPreClosurePenalInterest',
'preClosurePenalInterestOnType' => 'getPreClosurePenalInterestOnType',
'minDepositTerm' => 'getMinDepositTerm',
'minDepositTermType' => 'getMinDepositTermType',
'maxDepositTerm' => 'getMaxDepositTerm',
'maxDepositTermType' => 'getMaxDepositTermType',
'activeChart' => 'getActiveChart'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['shortName'] = isset($data['shortName']) ? $data['shortName'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['interestCompoundingPeriodType'] = isset($data['interestCompoundingPeriodType']) ? $data['interestCompoundingPeriodType'] : null;
        $this->container['interestPostingPeriodType'] = isset($data['interestPostingPeriodType']) ? $data['interestPostingPeriodType'] : null;
        $this->container['interestCalculationType'] = isset($data['interestCalculationType']) ? $data['interestCalculationType'] : null;
        $this->container['interestCalculationDaysInYearType'] = isset($data['interestCalculationDaysInYearType']) ? $data['interestCalculationDaysInYearType'] : null;
        $this->container['accountingMappings'] = isset($data['accountingMappings']) ? $data['accountingMappings'] : null;
        $this->container['feeToIncomeAccountMappings'] = isset($data['feeToIncomeAccountMappings']) ? $data['feeToIncomeAccountMappings'] : null;
        $this->container['penaltyToIncomeAccountMappings'] = isset($data['penaltyToIncomeAccountMappings']) ? $data['penaltyToIncomeAccountMappings'] : null;
        $this->container['recurringDepositFrequency'] = isset($data['recurringDepositFrequency']) ? $data['recurringDepositFrequency'] : null;
        $this->container['recurringDepositFrequencyType'] = isset($data['recurringDepositFrequencyType']) ? $data['recurringDepositFrequencyType'] : null;
        $this->container['preClosurePenalApplicable'] = isset($data['preClosurePenalApplicable']) ? $data['preClosurePenalApplicable'] : null;
        $this->container['preClosurePenalInterest'] = isset($data['preClosurePenalInterest']) ? $data['preClosurePenalInterest'] : null;
        $this->container['preClosurePenalInterestOnType'] = isset($data['preClosurePenalInterestOnType']) ? $data['preClosurePenalInterestOnType'] : null;
        $this->container['minDepositTerm'] = isset($data['minDepositTerm']) ? $data['minDepositTerm'] : null;
        $this->container['minDepositTermType'] = isset($data['minDepositTermType']) ? $data['minDepositTermType'] : null;
        $this->container['maxDepositTerm'] = isset($data['maxDepositTerm']) ? $data['maxDepositTerm'] : null;
        $this->container['maxDepositTermType'] = isset($data['maxDepositTermType']) ? $data['maxDepositTermType'] : null;
        $this->container['activeChart'] = isset($data['activeChart']) ? $data['activeChart'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets shortName
     *
     * @return string
     */
    public function getShortName()
    {
        return $this->container['shortName'];
    }

    /**
     * Sets shortName
     *
     * @param string $shortName shortName
     *
     * @return $this
     */
    public function setShortName($shortName)
    {
        $this->container['shortName'] = $shortName;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdCurrency
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdCurrency $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets interestCompoundingPeriodType
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdInterestCompoundingPeriodType
     */
    public function getInterestCompoundingPeriodType()
    {
        return $this->container['interestCompoundingPeriodType'];
    }

    /**
     * Sets interestCompoundingPeriodType
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdInterestCompoundingPeriodType $interestCompoundingPeriodType interestCompoundingPeriodType
     *
     * @return $this
     */
    public function setInterestCompoundingPeriodType($interestCompoundingPeriodType)
    {
        $this->container['interestCompoundingPeriodType'] = $interestCompoundingPeriodType;

        return $this;
    }

    /**
     * Gets interestPostingPeriodType
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsInterestPostingPeriodType
     */
    public function getInterestPostingPeriodType()
    {
        return $this->container['interestPostingPeriodType'];
    }

    /**
     * Sets interestPostingPeriodType
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsInterestPostingPeriodType $interestPostingPeriodType interestPostingPeriodType
     *
     * @return $this
     */
    public function setInterestPostingPeriodType($interestPostingPeriodType)
    {
        $this->container['interestPostingPeriodType'] = $interestPostingPeriodType;

        return $this;
    }

    /**
     * Gets interestCalculationType
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsInterestCalculationType
     */
    public function getInterestCalculationType()
    {
        return $this->container['interestCalculationType'];
    }

    /**
     * Sets interestCalculationType
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsInterestCalculationType $interestCalculationType interestCalculationType
     *
     * @return $this
     */
    public function setInterestCalculationType($interestCalculationType)
    {
        $this->container['interestCalculationType'] = $interestCalculationType;

        return $this;
    }

    /**
     * Gets interestCalculationDaysInYearType
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsInterestCalculationDaysInYearType
     */
    public function getInterestCalculationDaysInYearType()
    {
        return $this->container['interestCalculationDaysInYearType'];
    }

    /**
     * Sets interestCalculationDaysInYearType
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsInterestCalculationDaysInYearType $interestCalculationDaysInYearType interestCalculationDaysInYearType
     *
     * @return $this
     */
    public function setInterestCalculationDaysInYearType($interestCalculationDaysInYearType)
    {
        $this->container['interestCalculationDaysInYearType'] = $interestCalculationDaysInYearType;

        return $this;
    }

    /**
     * Gets accountingMappings
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdAccountingMappings
     */
    public function getAccountingMappings()
    {
        return $this->container['accountingMappings'];
    }

    /**
     * Sets accountingMappings
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdAccountingMappings $accountingMappings accountingMappings
     *
     * @return $this
     */
    public function setAccountingMappings($accountingMappings)
    {
        $this->container['accountingMappings'] = $accountingMappings;

        return $this;
    }

    /**
     * Gets feeToIncomeAccountMappings
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings[]
     */
    public function getFeeToIncomeAccountMappings()
    {
        return $this->container['feeToIncomeAccountMappings'];
    }

    /**
     * Sets feeToIncomeAccountMappings
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdFeeToIncomeAccountMappings[] $feeToIncomeAccountMappings feeToIncomeAccountMappings
     *
     * @return $this
     */
    public function setFeeToIncomeAccountMappings($feeToIncomeAccountMappings)
    {
        $this->container['feeToIncomeAccountMappings'] = $feeToIncomeAccountMappings;

        return $this;
    }

    /**
     * Gets penaltyToIncomeAccountMappings
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings[]
     */
    public function getPenaltyToIncomeAccountMappings()
    {
        return $this->container['penaltyToIncomeAccountMappings'];
    }

    /**
     * Sets penaltyToIncomeAccountMappings
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdPenaltyToIncomeAccountMappings[] $penaltyToIncomeAccountMappings penaltyToIncomeAccountMappings
     *
     * @return $this
     */
    public function setPenaltyToIncomeAccountMappings($penaltyToIncomeAccountMappings)
    {
        $this->container['penaltyToIncomeAccountMappings'] = $penaltyToIncomeAccountMappings;

        return $this;
    }

    /**
     * Gets recurringDepositFrequency
     *
     * @return int
     */
    public function getRecurringDepositFrequency()
    {
        return $this->container['recurringDepositFrequency'];
    }

    /**
     * Sets recurringDepositFrequency
     *
     * @param int $recurringDepositFrequency recurringDepositFrequency
     *
     * @return $this
     */
    public function setRecurringDepositFrequency($recurringDepositFrequency)
    {
        $this->container['recurringDepositFrequency'] = $recurringDepositFrequency;

        return $this;
    }

    /**
     * Gets recurringDepositFrequencyType
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsRecurringDepositFrequencyType
     */
    public function getRecurringDepositFrequencyType()
    {
        return $this->container['recurringDepositFrequencyType'];
    }

    /**
     * Sets recurringDepositFrequencyType
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsRecurringDepositFrequencyType $recurringDepositFrequencyType recurringDepositFrequencyType
     *
     * @return $this
     */
    public function setRecurringDepositFrequencyType($recurringDepositFrequencyType)
    {
        $this->container['recurringDepositFrequencyType'] = $recurringDepositFrequencyType;

        return $this;
    }

    /**
     * Gets preClosurePenalApplicable
     *
     * @return bool
     */
    public function getPreClosurePenalApplicable()
    {
        return $this->container['preClosurePenalApplicable'];
    }

    /**
     * Sets preClosurePenalApplicable
     *
     * @param bool $preClosurePenalApplicable preClosurePenalApplicable
     *
     * @return $this
     */
    public function setPreClosurePenalApplicable($preClosurePenalApplicable)
    {
        $this->container['preClosurePenalApplicable'] = $preClosurePenalApplicable;

        return $this;
    }

    /**
     * Gets preClosurePenalInterest
     *
     * @return double
     */
    public function getPreClosurePenalInterest()
    {
        return $this->container['preClosurePenalInterest'];
    }

    /**
     * Sets preClosurePenalInterest
     *
     * @param double $preClosurePenalInterest preClosurePenalInterest
     *
     * @return $this
     */
    public function setPreClosurePenalInterest($preClosurePenalInterest)
    {
        $this->container['preClosurePenalInterest'] = $preClosurePenalInterest;

        return $this;
    }

    /**
     * Gets preClosurePenalInterestOnType
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType
     */
    public function getPreClosurePenalInterestOnType()
    {
        return $this->container['preClosurePenalInterestOnType'];
    }

    /**
     * Sets preClosurePenalInterestOnType
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdPreClosurePenalInterestOnType $preClosurePenalInterestOnType preClosurePenalInterestOnType
     *
     * @return $this
     */
    public function setPreClosurePenalInterestOnType($preClosurePenalInterestOnType)
    {
        $this->container['preClosurePenalInterestOnType'] = $preClosurePenalInterestOnType;

        return $this;
    }

    /**
     * Gets minDepositTerm
     *
     * @return int
     */
    public function getMinDepositTerm()
    {
        return $this->container['minDepositTerm'];
    }

    /**
     * Sets minDepositTerm
     *
     * @param int $minDepositTerm minDepositTerm
     *
     * @return $this
     */
    public function setMinDepositTerm($minDepositTerm)
    {
        $this->container['minDepositTerm'] = $minDepositTerm;

        return $this;
    }

    /**
     * Gets minDepositTermType
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdMinDepositTermType
     */
    public function getMinDepositTermType()
    {
        return $this->container['minDepositTermType'];
    }

    /**
     * Sets minDepositTermType
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdMinDepositTermType $minDepositTermType minDepositTermType
     *
     * @return $this
     */
    public function setMinDepositTermType($minDepositTermType)
    {
        $this->container['minDepositTermType'] = $minDepositTermType;

        return $this;
    }

    /**
     * Gets maxDepositTerm
     *
     * @return int
     */
    public function getMaxDepositTerm()
    {
        return $this->container['maxDepositTerm'];
    }

    /**
     * Sets maxDepositTerm
     *
     * @param int $maxDepositTerm maxDepositTerm
     *
     * @return $this
     */
    public function setMaxDepositTerm($maxDepositTerm)
    {
        $this->container['maxDepositTerm'] = $maxDepositTerm;

        return $this;
    }

    /**
     * Gets maxDepositTermType
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdMaxDepositTermType
     */
    public function getMaxDepositTermType()
    {
        return $this->container['maxDepositTermType'];
    }

    /**
     * Sets maxDepositTermType
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdMaxDepositTermType $maxDepositTermType maxDepositTermType
     *
     * @return $this
     */
    public function setMaxDepositTermType($maxDepositTermType)
    {
        $this->container['maxDepositTermType'] = $maxDepositTermType;

        return $this;
    }

    /**
     * Gets activeChart
     *
     * @return \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdActiveChart
     */
    public function getActiveChart()
    {
        return $this->container['activeChart'];
    }

    /**
     * Sets activeChart
     *
     * @param \Frengky\Fineract\Model\GetRecurringDepositProductsProductIdActiveChart $activeChart activeChart
     *
     * @return $this
     */
    public function setActiveChart($activeChart)
    {
        $this->container['activeChart'] = $activeChart;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
