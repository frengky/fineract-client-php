<?php
/**
 * GetSelfLoansLoanIdResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Apache Fineract
 *
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@fineract.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Frengky\Fineract\Model;

use \ArrayAccess;
use \Frengky\Fineract\ObjectSerializer;

/**
 * GetSelfLoansLoanIdResponse Class Doc Comment
 *
 * @category Class
 * @description GetSelfLoansLoanIdResponse
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GetSelfLoansLoanIdResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GetSelfLoansLoanIdResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
'accountNo' => 'int',
'status' => '\Frengky\Fineract\Model\GetLoansLoanIdStatus',
'clientId' => 'int',
'clientName' => 'string',
'clientOfficeId' => 'int',
'loanProductId' => 'int',
'loanProductName' => 'string',
'loanProductDescription' => 'string',
'loanPurposeId' => 'int',
'loanPurposeName' => 'string',
'loanOfficerId' => 'int',
'loanOfficerName' => 'string',
'loanType' => '\Frengky\Fineract\Model\GetLoansLoanIdLoanType',
'currency' => '\Frengky\Fineract\Model\GetLoansLoanIdCurrency',
'principal' => 'int',
'termFrequency' => 'int',
'termPeriodFrequencyType' => '\Frengky\Fineract\Model\GetLoansLoanIdTermPeriodFrequencyType',
'numberOfRepayments' => 'int',
'repaymentEvery' => 'int',
'repaymentFrequencyType' => '\Frengky\Fineract\Model\GetLoansLoanIdRepaymentFrequencyType',
'interestRatePerPeriod' => 'int',
'interestRateFrequencyType' => '\Frengky\Fineract\Model\GetLoansLoanIdInterestRateFrequencyType',
'annualInterestRate' => 'int',
'amortizationType' => '\Frengky\Fineract\Model\GetLoansLoanIdAmortizationType',
'interestType' => '\Frengky\Fineract\Model\GetLoansLoanIdInterestType',
'interestCalculationPeriodType' => '\Frengky\Fineract\Model\GetLoansLoanIdInterestCalculationPeriodType',
'transactionProcessingStrategyId' => 'int',
'timeline' => '\Frengky\Fineract\Model\GetLoansLoanIdTimeline',
'summary' => '\Frengky\Fineract\Model\GetLoansLoanIdSummary'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int64',
'accountNo' => 'int64',
'status' => null,
'clientId' => 'int32',
'clientName' => null,
'clientOfficeId' => 'int32',
'loanProductId' => 'int32',
'loanProductName' => null,
'loanProductDescription' => null,
'loanPurposeId' => 'int32',
'loanPurposeName' => null,
'loanOfficerId' => 'int32',
'loanOfficerName' => null,
'loanType' => null,
'currency' => null,
'principal' => 'int64',
'termFrequency' => 'int32',
'termPeriodFrequencyType' => null,
'numberOfRepayments' => 'int32',
'repaymentEvery' => 'int32',
'repaymentFrequencyType' => null,
'interestRatePerPeriod' => 'int32',
'interestRateFrequencyType' => null,
'annualInterestRate' => 'int32',
'amortizationType' => null,
'interestType' => null,
'interestCalculationPeriodType' => null,
'transactionProcessingStrategyId' => 'int32',
'timeline' => null,
'summary' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'accountNo' => 'accountNo',
'status' => 'status',
'clientId' => 'clientId',
'clientName' => 'clientName',
'clientOfficeId' => 'clientOfficeId',
'loanProductId' => 'loanProductId',
'loanProductName' => 'loanProductName',
'loanProductDescription' => 'loanProductDescription',
'loanPurposeId' => 'loanPurposeId',
'loanPurposeName' => 'loanPurposeName',
'loanOfficerId' => 'loanOfficerId',
'loanOfficerName' => 'loanOfficerName',
'loanType' => 'loanType',
'currency' => 'currency',
'principal' => 'principal',
'termFrequency' => 'termFrequency',
'termPeriodFrequencyType' => 'termPeriodFrequencyType',
'numberOfRepayments' => 'numberOfRepayments',
'repaymentEvery' => 'repaymentEvery',
'repaymentFrequencyType' => 'repaymentFrequencyType',
'interestRatePerPeriod' => 'interestRatePerPeriod',
'interestRateFrequencyType' => 'interestRateFrequencyType',
'annualInterestRate' => 'annualInterestRate',
'amortizationType' => 'amortizationType',
'interestType' => 'interestType',
'interestCalculationPeriodType' => 'interestCalculationPeriodType',
'transactionProcessingStrategyId' => 'transactionProcessingStrategyId',
'timeline' => 'timeline',
'summary' => 'summary'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'accountNo' => 'setAccountNo',
'status' => 'setStatus',
'clientId' => 'setClientId',
'clientName' => 'setClientName',
'clientOfficeId' => 'setClientOfficeId',
'loanProductId' => 'setLoanProductId',
'loanProductName' => 'setLoanProductName',
'loanProductDescription' => 'setLoanProductDescription',
'loanPurposeId' => 'setLoanPurposeId',
'loanPurposeName' => 'setLoanPurposeName',
'loanOfficerId' => 'setLoanOfficerId',
'loanOfficerName' => 'setLoanOfficerName',
'loanType' => 'setLoanType',
'currency' => 'setCurrency',
'principal' => 'setPrincipal',
'termFrequency' => 'setTermFrequency',
'termPeriodFrequencyType' => 'setTermPeriodFrequencyType',
'numberOfRepayments' => 'setNumberOfRepayments',
'repaymentEvery' => 'setRepaymentEvery',
'repaymentFrequencyType' => 'setRepaymentFrequencyType',
'interestRatePerPeriod' => 'setInterestRatePerPeriod',
'interestRateFrequencyType' => 'setInterestRateFrequencyType',
'annualInterestRate' => 'setAnnualInterestRate',
'amortizationType' => 'setAmortizationType',
'interestType' => 'setInterestType',
'interestCalculationPeriodType' => 'setInterestCalculationPeriodType',
'transactionProcessingStrategyId' => 'setTransactionProcessingStrategyId',
'timeline' => 'setTimeline',
'summary' => 'setSummary'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'accountNo' => 'getAccountNo',
'status' => 'getStatus',
'clientId' => 'getClientId',
'clientName' => 'getClientName',
'clientOfficeId' => 'getClientOfficeId',
'loanProductId' => 'getLoanProductId',
'loanProductName' => 'getLoanProductName',
'loanProductDescription' => 'getLoanProductDescription',
'loanPurposeId' => 'getLoanPurposeId',
'loanPurposeName' => 'getLoanPurposeName',
'loanOfficerId' => 'getLoanOfficerId',
'loanOfficerName' => 'getLoanOfficerName',
'loanType' => 'getLoanType',
'currency' => 'getCurrency',
'principal' => 'getPrincipal',
'termFrequency' => 'getTermFrequency',
'termPeriodFrequencyType' => 'getTermPeriodFrequencyType',
'numberOfRepayments' => 'getNumberOfRepayments',
'repaymentEvery' => 'getRepaymentEvery',
'repaymentFrequencyType' => 'getRepaymentFrequencyType',
'interestRatePerPeriod' => 'getInterestRatePerPeriod',
'interestRateFrequencyType' => 'getInterestRateFrequencyType',
'annualInterestRate' => 'getAnnualInterestRate',
'amortizationType' => 'getAmortizationType',
'interestType' => 'getInterestType',
'interestCalculationPeriodType' => 'getInterestCalculationPeriodType',
'transactionProcessingStrategyId' => 'getTransactionProcessingStrategyId',
'timeline' => 'getTimeline',
'summary' => 'getSummary'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['accountNo'] = isset($data['accountNo']) ? $data['accountNo'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['clientId'] = isset($data['clientId']) ? $data['clientId'] : null;
        $this->container['clientName'] = isset($data['clientName']) ? $data['clientName'] : null;
        $this->container['clientOfficeId'] = isset($data['clientOfficeId']) ? $data['clientOfficeId'] : null;
        $this->container['loanProductId'] = isset($data['loanProductId']) ? $data['loanProductId'] : null;
        $this->container['loanProductName'] = isset($data['loanProductName']) ? $data['loanProductName'] : null;
        $this->container['loanProductDescription'] = isset($data['loanProductDescription']) ? $data['loanProductDescription'] : null;
        $this->container['loanPurposeId'] = isset($data['loanPurposeId']) ? $data['loanPurposeId'] : null;
        $this->container['loanPurposeName'] = isset($data['loanPurposeName']) ? $data['loanPurposeName'] : null;
        $this->container['loanOfficerId'] = isset($data['loanOfficerId']) ? $data['loanOfficerId'] : null;
        $this->container['loanOfficerName'] = isset($data['loanOfficerName']) ? $data['loanOfficerName'] : null;
        $this->container['loanType'] = isset($data['loanType']) ? $data['loanType'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['principal'] = isset($data['principal']) ? $data['principal'] : null;
        $this->container['termFrequency'] = isset($data['termFrequency']) ? $data['termFrequency'] : null;
        $this->container['termPeriodFrequencyType'] = isset($data['termPeriodFrequencyType']) ? $data['termPeriodFrequencyType'] : null;
        $this->container['numberOfRepayments'] = isset($data['numberOfRepayments']) ? $data['numberOfRepayments'] : null;
        $this->container['repaymentEvery'] = isset($data['repaymentEvery']) ? $data['repaymentEvery'] : null;
        $this->container['repaymentFrequencyType'] = isset($data['repaymentFrequencyType']) ? $data['repaymentFrequencyType'] : null;
        $this->container['interestRatePerPeriod'] = isset($data['interestRatePerPeriod']) ? $data['interestRatePerPeriod'] : null;
        $this->container['interestRateFrequencyType'] = isset($data['interestRateFrequencyType']) ? $data['interestRateFrequencyType'] : null;
        $this->container['annualInterestRate'] = isset($data['annualInterestRate']) ? $data['annualInterestRate'] : null;
        $this->container['amortizationType'] = isset($data['amortizationType']) ? $data['amortizationType'] : null;
        $this->container['interestType'] = isset($data['interestType']) ? $data['interestType'] : null;
        $this->container['interestCalculationPeriodType'] = isset($data['interestCalculationPeriodType']) ? $data['interestCalculationPeriodType'] : null;
        $this->container['transactionProcessingStrategyId'] = isset($data['transactionProcessingStrategyId']) ? $data['transactionProcessingStrategyId'] : null;
        $this->container['timeline'] = isset($data['timeline']) ? $data['timeline'] : null;
        $this->container['summary'] = isset($data['summary']) ? $data['summary'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets accountNo
     *
     * @return int
     */
    public function getAccountNo()
    {
        return $this->container['accountNo'];
    }

    /**
     * Sets accountNo
     *
     * @param int $accountNo accountNo
     *
     * @return $this
     */
    public function setAccountNo($accountNo)
    {
        $this->container['accountNo'] = $accountNo;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdStatus $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets clientId
     *
     * @return int
     */
    public function getClientId()
    {
        return $this->container['clientId'];
    }

    /**
     * Sets clientId
     *
     * @param int $clientId clientId
     *
     * @return $this
     */
    public function setClientId($clientId)
    {
        $this->container['clientId'] = $clientId;

        return $this;
    }

    /**
     * Gets clientName
     *
     * @return string
     */
    public function getClientName()
    {
        return $this->container['clientName'];
    }

    /**
     * Sets clientName
     *
     * @param string $clientName clientName
     *
     * @return $this
     */
    public function setClientName($clientName)
    {
        $this->container['clientName'] = $clientName;

        return $this;
    }

    /**
     * Gets clientOfficeId
     *
     * @return int
     */
    public function getClientOfficeId()
    {
        return $this->container['clientOfficeId'];
    }

    /**
     * Sets clientOfficeId
     *
     * @param int $clientOfficeId clientOfficeId
     *
     * @return $this
     */
    public function setClientOfficeId($clientOfficeId)
    {
        $this->container['clientOfficeId'] = $clientOfficeId;

        return $this;
    }

    /**
     * Gets loanProductId
     *
     * @return int
     */
    public function getLoanProductId()
    {
        return $this->container['loanProductId'];
    }

    /**
     * Sets loanProductId
     *
     * @param int $loanProductId loanProductId
     *
     * @return $this
     */
    public function setLoanProductId($loanProductId)
    {
        $this->container['loanProductId'] = $loanProductId;

        return $this;
    }

    /**
     * Gets loanProductName
     *
     * @return string
     */
    public function getLoanProductName()
    {
        return $this->container['loanProductName'];
    }

    /**
     * Sets loanProductName
     *
     * @param string $loanProductName loanProductName
     *
     * @return $this
     */
    public function setLoanProductName($loanProductName)
    {
        $this->container['loanProductName'] = $loanProductName;

        return $this;
    }

    /**
     * Gets loanProductDescription
     *
     * @return string
     */
    public function getLoanProductDescription()
    {
        return $this->container['loanProductDescription'];
    }

    /**
     * Sets loanProductDescription
     *
     * @param string $loanProductDescription loanProductDescription
     *
     * @return $this
     */
    public function setLoanProductDescription($loanProductDescription)
    {
        $this->container['loanProductDescription'] = $loanProductDescription;

        return $this;
    }

    /**
     * Gets loanPurposeId
     *
     * @return int
     */
    public function getLoanPurposeId()
    {
        return $this->container['loanPurposeId'];
    }

    /**
     * Sets loanPurposeId
     *
     * @param int $loanPurposeId loanPurposeId
     *
     * @return $this
     */
    public function setLoanPurposeId($loanPurposeId)
    {
        $this->container['loanPurposeId'] = $loanPurposeId;

        return $this;
    }

    /**
     * Gets loanPurposeName
     *
     * @return string
     */
    public function getLoanPurposeName()
    {
        return $this->container['loanPurposeName'];
    }

    /**
     * Sets loanPurposeName
     *
     * @param string $loanPurposeName loanPurposeName
     *
     * @return $this
     */
    public function setLoanPurposeName($loanPurposeName)
    {
        $this->container['loanPurposeName'] = $loanPurposeName;

        return $this;
    }

    /**
     * Gets loanOfficerId
     *
     * @return int
     */
    public function getLoanOfficerId()
    {
        return $this->container['loanOfficerId'];
    }

    /**
     * Sets loanOfficerId
     *
     * @param int $loanOfficerId loanOfficerId
     *
     * @return $this
     */
    public function setLoanOfficerId($loanOfficerId)
    {
        $this->container['loanOfficerId'] = $loanOfficerId;

        return $this;
    }

    /**
     * Gets loanOfficerName
     *
     * @return string
     */
    public function getLoanOfficerName()
    {
        return $this->container['loanOfficerName'];
    }

    /**
     * Sets loanOfficerName
     *
     * @param string $loanOfficerName loanOfficerName
     *
     * @return $this
     */
    public function setLoanOfficerName($loanOfficerName)
    {
        $this->container['loanOfficerName'] = $loanOfficerName;

        return $this;
    }

    /**
     * Gets loanType
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdLoanType
     */
    public function getLoanType()
    {
        return $this->container['loanType'];
    }

    /**
     * Sets loanType
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdLoanType $loanType loanType
     *
     * @return $this
     */
    public function setLoanType($loanType)
    {
        $this->container['loanType'] = $loanType;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdCurrency
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdCurrency $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets principal
     *
     * @return int
     */
    public function getPrincipal()
    {
        return $this->container['principal'];
    }

    /**
     * Sets principal
     *
     * @param int $principal principal
     *
     * @return $this
     */
    public function setPrincipal($principal)
    {
        $this->container['principal'] = $principal;

        return $this;
    }

    /**
     * Gets termFrequency
     *
     * @return int
     */
    public function getTermFrequency()
    {
        return $this->container['termFrequency'];
    }

    /**
     * Sets termFrequency
     *
     * @param int $termFrequency termFrequency
     *
     * @return $this
     */
    public function setTermFrequency($termFrequency)
    {
        $this->container['termFrequency'] = $termFrequency;

        return $this;
    }

    /**
     * Gets termPeriodFrequencyType
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdTermPeriodFrequencyType
     */
    public function getTermPeriodFrequencyType()
    {
        return $this->container['termPeriodFrequencyType'];
    }

    /**
     * Sets termPeriodFrequencyType
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdTermPeriodFrequencyType $termPeriodFrequencyType termPeriodFrequencyType
     *
     * @return $this
     */
    public function setTermPeriodFrequencyType($termPeriodFrequencyType)
    {
        $this->container['termPeriodFrequencyType'] = $termPeriodFrequencyType;

        return $this;
    }

    /**
     * Gets numberOfRepayments
     *
     * @return int
     */
    public function getNumberOfRepayments()
    {
        return $this->container['numberOfRepayments'];
    }

    /**
     * Sets numberOfRepayments
     *
     * @param int $numberOfRepayments numberOfRepayments
     *
     * @return $this
     */
    public function setNumberOfRepayments($numberOfRepayments)
    {
        $this->container['numberOfRepayments'] = $numberOfRepayments;

        return $this;
    }

    /**
     * Gets repaymentEvery
     *
     * @return int
     */
    public function getRepaymentEvery()
    {
        return $this->container['repaymentEvery'];
    }

    /**
     * Sets repaymentEvery
     *
     * @param int $repaymentEvery repaymentEvery
     *
     * @return $this
     */
    public function setRepaymentEvery($repaymentEvery)
    {
        $this->container['repaymentEvery'] = $repaymentEvery;

        return $this;
    }

    /**
     * Gets repaymentFrequencyType
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdRepaymentFrequencyType
     */
    public function getRepaymentFrequencyType()
    {
        return $this->container['repaymentFrequencyType'];
    }

    /**
     * Sets repaymentFrequencyType
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdRepaymentFrequencyType $repaymentFrequencyType repaymentFrequencyType
     *
     * @return $this
     */
    public function setRepaymentFrequencyType($repaymentFrequencyType)
    {
        $this->container['repaymentFrequencyType'] = $repaymentFrequencyType;

        return $this;
    }

    /**
     * Gets interestRatePerPeriod
     *
     * @return int
     */
    public function getInterestRatePerPeriod()
    {
        return $this->container['interestRatePerPeriod'];
    }

    /**
     * Sets interestRatePerPeriod
     *
     * @param int $interestRatePerPeriod interestRatePerPeriod
     *
     * @return $this
     */
    public function setInterestRatePerPeriod($interestRatePerPeriod)
    {
        $this->container['interestRatePerPeriod'] = $interestRatePerPeriod;

        return $this;
    }

    /**
     * Gets interestRateFrequencyType
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdInterestRateFrequencyType
     */
    public function getInterestRateFrequencyType()
    {
        return $this->container['interestRateFrequencyType'];
    }

    /**
     * Sets interestRateFrequencyType
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdInterestRateFrequencyType $interestRateFrequencyType interestRateFrequencyType
     *
     * @return $this
     */
    public function setInterestRateFrequencyType($interestRateFrequencyType)
    {
        $this->container['interestRateFrequencyType'] = $interestRateFrequencyType;

        return $this;
    }

    /**
     * Gets annualInterestRate
     *
     * @return int
     */
    public function getAnnualInterestRate()
    {
        return $this->container['annualInterestRate'];
    }

    /**
     * Sets annualInterestRate
     *
     * @param int $annualInterestRate annualInterestRate
     *
     * @return $this
     */
    public function setAnnualInterestRate($annualInterestRate)
    {
        $this->container['annualInterestRate'] = $annualInterestRate;

        return $this;
    }

    /**
     * Gets amortizationType
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdAmortizationType
     */
    public function getAmortizationType()
    {
        return $this->container['amortizationType'];
    }

    /**
     * Sets amortizationType
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdAmortizationType $amortizationType amortizationType
     *
     * @return $this
     */
    public function setAmortizationType($amortizationType)
    {
        $this->container['amortizationType'] = $amortizationType;

        return $this;
    }

    /**
     * Gets interestType
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdInterestType
     */
    public function getInterestType()
    {
        return $this->container['interestType'];
    }

    /**
     * Sets interestType
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdInterestType $interestType interestType
     *
     * @return $this
     */
    public function setInterestType($interestType)
    {
        $this->container['interestType'] = $interestType;

        return $this;
    }

    /**
     * Gets interestCalculationPeriodType
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdInterestCalculationPeriodType
     */
    public function getInterestCalculationPeriodType()
    {
        return $this->container['interestCalculationPeriodType'];
    }

    /**
     * Sets interestCalculationPeriodType
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdInterestCalculationPeriodType $interestCalculationPeriodType interestCalculationPeriodType
     *
     * @return $this
     */
    public function setInterestCalculationPeriodType($interestCalculationPeriodType)
    {
        $this->container['interestCalculationPeriodType'] = $interestCalculationPeriodType;

        return $this;
    }

    /**
     * Gets transactionProcessingStrategyId
     *
     * @return int
     */
    public function getTransactionProcessingStrategyId()
    {
        return $this->container['transactionProcessingStrategyId'];
    }

    /**
     * Sets transactionProcessingStrategyId
     *
     * @param int $transactionProcessingStrategyId transactionProcessingStrategyId
     *
     * @return $this
     */
    public function setTransactionProcessingStrategyId($transactionProcessingStrategyId)
    {
        $this->container['transactionProcessingStrategyId'] = $transactionProcessingStrategyId;

        return $this;
    }

    /**
     * Gets timeline
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdTimeline
     */
    public function getTimeline()
    {
        return $this->container['timeline'];
    }

    /**
     * Sets timeline
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdTimeline $timeline timeline
     *
     * @return $this
     */
    public function setTimeline($timeline)
    {
        $this->container['timeline'] = $timeline;

        return $this;
    }

    /**
     * Gets summary
     *
     * @return \Frengky\Fineract\Model\GetLoansLoanIdSummary
     */
    public function getSummary()
    {
        return $this->container['summary'];
    }

    /**
     * Sets summary
     *
     * @param \Frengky\Fineract\Model\GetLoansLoanIdSummary $summary summary
     *
     * @return $this
     */
    public function setSummary($summary)
    {
        $this->container['summary'] = $summary;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
