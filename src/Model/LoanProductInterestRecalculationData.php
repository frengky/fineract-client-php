<?php
/**
 * LoanProductInterestRecalculationData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Apache Fineract
 *
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@fineract.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Frengky\Fineract\Model;

use \ArrayAccess;
use \Frengky\Fineract\ObjectSerializer;

/**
 * LoanProductInterestRecalculationData Class Doc Comment
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LoanProductInterestRecalculationData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'LoanProductInterestRecalculationData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'interestRecalculationCompoundingType' => '\Frengky\Fineract\Model\EnumOptionData',
'rescheduleStrategyType' => '\Frengky\Fineract\Model\EnumOptionData',
'recalculationRestFrequencyType' => '\Frengky\Fineract\Model\EnumOptionData',
'recalculationRestFrequencyInterval' => 'int',
'recalculationRestFrequencyNthDay' => '\Frengky\Fineract\Model\EnumOptionData',
'recalculationRestFrequencyWeekday' => '\Frengky\Fineract\Model\EnumOptionData',
'recalculationRestFrequencyOnDay' => 'int',
'recalculationCompoundingFrequencyType' => '\Frengky\Fineract\Model\EnumOptionData',
'recalculationCompoundingFrequencyInterval' => 'int',
'recalculationCompoundingFrequencyNthDay' => '\Frengky\Fineract\Model\EnumOptionData',
'recalculationCompoundingFrequencyWeekday' => '\Frengky\Fineract\Model\EnumOptionData',
'recalculationCompoundingFrequencyOnDay' => 'int',
'compoundingToBePostedAsTransaction' => 'bool'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'interestRecalculationCompoundingType' => null,
'rescheduleStrategyType' => null,
'recalculationRestFrequencyType' => null,
'recalculationRestFrequencyInterval' => 'int32',
'recalculationRestFrequencyNthDay' => null,
'recalculationRestFrequencyWeekday' => null,
'recalculationRestFrequencyOnDay' => 'int32',
'recalculationCompoundingFrequencyType' => null,
'recalculationCompoundingFrequencyInterval' => 'int32',
'recalculationCompoundingFrequencyNthDay' => null,
'recalculationCompoundingFrequencyWeekday' => null,
'recalculationCompoundingFrequencyOnDay' => 'int32',
'compoundingToBePostedAsTransaction' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'interestRecalculationCompoundingType' => 'interestRecalculationCompoundingType',
'rescheduleStrategyType' => 'rescheduleStrategyType',
'recalculationRestFrequencyType' => 'recalculationRestFrequencyType',
'recalculationRestFrequencyInterval' => 'recalculationRestFrequencyInterval',
'recalculationRestFrequencyNthDay' => 'recalculationRestFrequencyNthDay',
'recalculationRestFrequencyWeekday' => 'recalculationRestFrequencyWeekday',
'recalculationRestFrequencyOnDay' => 'recalculationRestFrequencyOnDay',
'recalculationCompoundingFrequencyType' => 'recalculationCompoundingFrequencyType',
'recalculationCompoundingFrequencyInterval' => 'recalculationCompoundingFrequencyInterval',
'recalculationCompoundingFrequencyNthDay' => 'recalculationCompoundingFrequencyNthDay',
'recalculationCompoundingFrequencyWeekday' => 'recalculationCompoundingFrequencyWeekday',
'recalculationCompoundingFrequencyOnDay' => 'recalculationCompoundingFrequencyOnDay',
'compoundingToBePostedAsTransaction' => 'compoundingToBePostedAsTransaction'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'interestRecalculationCompoundingType' => 'setInterestRecalculationCompoundingType',
'rescheduleStrategyType' => 'setRescheduleStrategyType',
'recalculationRestFrequencyType' => 'setRecalculationRestFrequencyType',
'recalculationRestFrequencyInterval' => 'setRecalculationRestFrequencyInterval',
'recalculationRestFrequencyNthDay' => 'setRecalculationRestFrequencyNthDay',
'recalculationRestFrequencyWeekday' => 'setRecalculationRestFrequencyWeekday',
'recalculationRestFrequencyOnDay' => 'setRecalculationRestFrequencyOnDay',
'recalculationCompoundingFrequencyType' => 'setRecalculationCompoundingFrequencyType',
'recalculationCompoundingFrequencyInterval' => 'setRecalculationCompoundingFrequencyInterval',
'recalculationCompoundingFrequencyNthDay' => 'setRecalculationCompoundingFrequencyNthDay',
'recalculationCompoundingFrequencyWeekday' => 'setRecalculationCompoundingFrequencyWeekday',
'recalculationCompoundingFrequencyOnDay' => 'setRecalculationCompoundingFrequencyOnDay',
'compoundingToBePostedAsTransaction' => 'setCompoundingToBePostedAsTransaction'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'interestRecalculationCompoundingType' => 'getInterestRecalculationCompoundingType',
'rescheduleStrategyType' => 'getRescheduleStrategyType',
'recalculationRestFrequencyType' => 'getRecalculationRestFrequencyType',
'recalculationRestFrequencyInterval' => 'getRecalculationRestFrequencyInterval',
'recalculationRestFrequencyNthDay' => 'getRecalculationRestFrequencyNthDay',
'recalculationRestFrequencyWeekday' => 'getRecalculationRestFrequencyWeekday',
'recalculationRestFrequencyOnDay' => 'getRecalculationRestFrequencyOnDay',
'recalculationCompoundingFrequencyType' => 'getRecalculationCompoundingFrequencyType',
'recalculationCompoundingFrequencyInterval' => 'getRecalculationCompoundingFrequencyInterval',
'recalculationCompoundingFrequencyNthDay' => 'getRecalculationCompoundingFrequencyNthDay',
'recalculationCompoundingFrequencyWeekday' => 'getRecalculationCompoundingFrequencyWeekday',
'recalculationCompoundingFrequencyOnDay' => 'getRecalculationCompoundingFrequencyOnDay',
'compoundingToBePostedAsTransaction' => 'getCompoundingToBePostedAsTransaction'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['interestRecalculationCompoundingType'] = isset($data['interestRecalculationCompoundingType']) ? $data['interestRecalculationCompoundingType'] : null;
        $this->container['rescheduleStrategyType'] = isset($data['rescheduleStrategyType']) ? $data['rescheduleStrategyType'] : null;
        $this->container['recalculationRestFrequencyType'] = isset($data['recalculationRestFrequencyType']) ? $data['recalculationRestFrequencyType'] : null;
        $this->container['recalculationRestFrequencyInterval'] = isset($data['recalculationRestFrequencyInterval']) ? $data['recalculationRestFrequencyInterval'] : null;
        $this->container['recalculationRestFrequencyNthDay'] = isset($data['recalculationRestFrequencyNthDay']) ? $data['recalculationRestFrequencyNthDay'] : null;
        $this->container['recalculationRestFrequencyWeekday'] = isset($data['recalculationRestFrequencyWeekday']) ? $data['recalculationRestFrequencyWeekday'] : null;
        $this->container['recalculationRestFrequencyOnDay'] = isset($data['recalculationRestFrequencyOnDay']) ? $data['recalculationRestFrequencyOnDay'] : null;
        $this->container['recalculationCompoundingFrequencyType'] = isset($data['recalculationCompoundingFrequencyType']) ? $data['recalculationCompoundingFrequencyType'] : null;
        $this->container['recalculationCompoundingFrequencyInterval'] = isset($data['recalculationCompoundingFrequencyInterval']) ? $data['recalculationCompoundingFrequencyInterval'] : null;
        $this->container['recalculationCompoundingFrequencyNthDay'] = isset($data['recalculationCompoundingFrequencyNthDay']) ? $data['recalculationCompoundingFrequencyNthDay'] : null;
        $this->container['recalculationCompoundingFrequencyWeekday'] = isset($data['recalculationCompoundingFrequencyWeekday']) ? $data['recalculationCompoundingFrequencyWeekday'] : null;
        $this->container['recalculationCompoundingFrequencyOnDay'] = isset($data['recalculationCompoundingFrequencyOnDay']) ? $data['recalculationCompoundingFrequencyOnDay'] : null;
        $this->container['compoundingToBePostedAsTransaction'] = isset($data['compoundingToBePostedAsTransaction']) ? $data['compoundingToBePostedAsTransaction'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets interestRecalculationCompoundingType
     *
     * @return \Frengky\Fineract\Model\EnumOptionData
     */
    public function getInterestRecalculationCompoundingType()
    {
        return $this->container['interestRecalculationCompoundingType'];
    }

    /**
     * Sets interestRecalculationCompoundingType
     *
     * @param \Frengky\Fineract\Model\EnumOptionData $interestRecalculationCompoundingType interestRecalculationCompoundingType
     *
     * @return $this
     */
    public function setInterestRecalculationCompoundingType($interestRecalculationCompoundingType)
    {
        $this->container['interestRecalculationCompoundingType'] = $interestRecalculationCompoundingType;

        return $this;
    }

    /**
     * Gets rescheduleStrategyType
     *
     * @return \Frengky\Fineract\Model\EnumOptionData
     */
    public function getRescheduleStrategyType()
    {
        return $this->container['rescheduleStrategyType'];
    }

    /**
     * Sets rescheduleStrategyType
     *
     * @param \Frengky\Fineract\Model\EnumOptionData $rescheduleStrategyType rescheduleStrategyType
     *
     * @return $this
     */
    public function setRescheduleStrategyType($rescheduleStrategyType)
    {
        $this->container['rescheduleStrategyType'] = $rescheduleStrategyType;

        return $this;
    }

    /**
     * Gets recalculationRestFrequencyType
     *
     * @return \Frengky\Fineract\Model\EnumOptionData
     */
    public function getRecalculationRestFrequencyType()
    {
        return $this->container['recalculationRestFrequencyType'];
    }

    /**
     * Sets recalculationRestFrequencyType
     *
     * @param \Frengky\Fineract\Model\EnumOptionData $recalculationRestFrequencyType recalculationRestFrequencyType
     *
     * @return $this
     */
    public function setRecalculationRestFrequencyType($recalculationRestFrequencyType)
    {
        $this->container['recalculationRestFrequencyType'] = $recalculationRestFrequencyType;

        return $this;
    }

    /**
     * Gets recalculationRestFrequencyInterval
     *
     * @return int
     */
    public function getRecalculationRestFrequencyInterval()
    {
        return $this->container['recalculationRestFrequencyInterval'];
    }

    /**
     * Sets recalculationRestFrequencyInterval
     *
     * @param int $recalculationRestFrequencyInterval recalculationRestFrequencyInterval
     *
     * @return $this
     */
    public function setRecalculationRestFrequencyInterval($recalculationRestFrequencyInterval)
    {
        $this->container['recalculationRestFrequencyInterval'] = $recalculationRestFrequencyInterval;

        return $this;
    }

    /**
     * Gets recalculationRestFrequencyNthDay
     *
     * @return \Frengky\Fineract\Model\EnumOptionData
     */
    public function getRecalculationRestFrequencyNthDay()
    {
        return $this->container['recalculationRestFrequencyNthDay'];
    }

    /**
     * Sets recalculationRestFrequencyNthDay
     *
     * @param \Frengky\Fineract\Model\EnumOptionData $recalculationRestFrequencyNthDay recalculationRestFrequencyNthDay
     *
     * @return $this
     */
    public function setRecalculationRestFrequencyNthDay($recalculationRestFrequencyNthDay)
    {
        $this->container['recalculationRestFrequencyNthDay'] = $recalculationRestFrequencyNthDay;

        return $this;
    }

    /**
     * Gets recalculationRestFrequencyWeekday
     *
     * @return \Frengky\Fineract\Model\EnumOptionData
     */
    public function getRecalculationRestFrequencyWeekday()
    {
        return $this->container['recalculationRestFrequencyWeekday'];
    }

    /**
     * Sets recalculationRestFrequencyWeekday
     *
     * @param \Frengky\Fineract\Model\EnumOptionData $recalculationRestFrequencyWeekday recalculationRestFrequencyWeekday
     *
     * @return $this
     */
    public function setRecalculationRestFrequencyWeekday($recalculationRestFrequencyWeekday)
    {
        $this->container['recalculationRestFrequencyWeekday'] = $recalculationRestFrequencyWeekday;

        return $this;
    }

    /**
     * Gets recalculationRestFrequencyOnDay
     *
     * @return int
     */
    public function getRecalculationRestFrequencyOnDay()
    {
        return $this->container['recalculationRestFrequencyOnDay'];
    }

    /**
     * Sets recalculationRestFrequencyOnDay
     *
     * @param int $recalculationRestFrequencyOnDay recalculationRestFrequencyOnDay
     *
     * @return $this
     */
    public function setRecalculationRestFrequencyOnDay($recalculationRestFrequencyOnDay)
    {
        $this->container['recalculationRestFrequencyOnDay'] = $recalculationRestFrequencyOnDay;

        return $this;
    }

    /**
     * Gets recalculationCompoundingFrequencyType
     *
     * @return \Frengky\Fineract\Model\EnumOptionData
     */
    public function getRecalculationCompoundingFrequencyType()
    {
        return $this->container['recalculationCompoundingFrequencyType'];
    }

    /**
     * Sets recalculationCompoundingFrequencyType
     *
     * @param \Frengky\Fineract\Model\EnumOptionData $recalculationCompoundingFrequencyType recalculationCompoundingFrequencyType
     *
     * @return $this
     */
    public function setRecalculationCompoundingFrequencyType($recalculationCompoundingFrequencyType)
    {
        $this->container['recalculationCompoundingFrequencyType'] = $recalculationCompoundingFrequencyType;

        return $this;
    }

    /**
     * Gets recalculationCompoundingFrequencyInterval
     *
     * @return int
     */
    public function getRecalculationCompoundingFrequencyInterval()
    {
        return $this->container['recalculationCompoundingFrequencyInterval'];
    }

    /**
     * Sets recalculationCompoundingFrequencyInterval
     *
     * @param int $recalculationCompoundingFrequencyInterval recalculationCompoundingFrequencyInterval
     *
     * @return $this
     */
    public function setRecalculationCompoundingFrequencyInterval($recalculationCompoundingFrequencyInterval)
    {
        $this->container['recalculationCompoundingFrequencyInterval'] = $recalculationCompoundingFrequencyInterval;

        return $this;
    }

    /**
     * Gets recalculationCompoundingFrequencyNthDay
     *
     * @return \Frengky\Fineract\Model\EnumOptionData
     */
    public function getRecalculationCompoundingFrequencyNthDay()
    {
        return $this->container['recalculationCompoundingFrequencyNthDay'];
    }

    /**
     * Sets recalculationCompoundingFrequencyNthDay
     *
     * @param \Frengky\Fineract\Model\EnumOptionData $recalculationCompoundingFrequencyNthDay recalculationCompoundingFrequencyNthDay
     *
     * @return $this
     */
    public function setRecalculationCompoundingFrequencyNthDay($recalculationCompoundingFrequencyNthDay)
    {
        $this->container['recalculationCompoundingFrequencyNthDay'] = $recalculationCompoundingFrequencyNthDay;

        return $this;
    }

    /**
     * Gets recalculationCompoundingFrequencyWeekday
     *
     * @return \Frengky\Fineract\Model\EnumOptionData
     */
    public function getRecalculationCompoundingFrequencyWeekday()
    {
        return $this->container['recalculationCompoundingFrequencyWeekday'];
    }

    /**
     * Sets recalculationCompoundingFrequencyWeekday
     *
     * @param \Frengky\Fineract\Model\EnumOptionData $recalculationCompoundingFrequencyWeekday recalculationCompoundingFrequencyWeekday
     *
     * @return $this
     */
    public function setRecalculationCompoundingFrequencyWeekday($recalculationCompoundingFrequencyWeekday)
    {
        $this->container['recalculationCompoundingFrequencyWeekday'] = $recalculationCompoundingFrequencyWeekday;

        return $this;
    }

    /**
     * Gets recalculationCompoundingFrequencyOnDay
     *
     * @return int
     */
    public function getRecalculationCompoundingFrequencyOnDay()
    {
        return $this->container['recalculationCompoundingFrequencyOnDay'];
    }

    /**
     * Sets recalculationCompoundingFrequencyOnDay
     *
     * @param int $recalculationCompoundingFrequencyOnDay recalculationCompoundingFrequencyOnDay
     *
     * @return $this
     */
    public function setRecalculationCompoundingFrequencyOnDay($recalculationCompoundingFrequencyOnDay)
    {
        $this->container['recalculationCompoundingFrequencyOnDay'] = $recalculationCompoundingFrequencyOnDay;

        return $this;
    }

    /**
     * Gets compoundingToBePostedAsTransaction
     *
     * @return bool
     */
    public function getCompoundingToBePostedAsTransaction()
    {
        return $this->container['compoundingToBePostedAsTransaction'];
    }

    /**
     * Sets compoundingToBePostedAsTransaction
     *
     * @param bool $compoundingToBePostedAsTransaction compoundingToBePostedAsTransaction
     *
     * @return $this
     */
    public function setCompoundingToBePostedAsTransaction($compoundingToBePostedAsTransaction)
    {
        $this->container['compoundingToBePostedAsTransaction'] = $compoundingToBePostedAsTransaction;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
