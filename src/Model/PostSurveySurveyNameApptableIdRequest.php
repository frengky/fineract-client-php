<?php
/**
 * PostSurveySurveyNameApptableIdRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Apache Fineract
 *
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@fineract.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Frengky\Fineract\Model;

use \ArrayAccess;
use \Frengky\Fineract\ObjectSerializer;

/**
 * PostSurveySurveyNameApptableIdRequest Class Doc Comment
 *
 * @category Class
 * @description PostSurveySurveyNameApptableIdRequest
 * @package  Frengky\Fineract
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PostSurveySurveyNameApptableIdRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PostSurveySurveyNameApptableIdRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'ppiHouseholdMembersCdQ1Householdmembers' => 'int',
'ppiHighestschoolCdQ2Highestschool' => 'int',
'ppiBusinessoccupationCdQ3Businessoccupation' => 'int',
'ppiHabitableroomsCdQ4Habitablerooms' => 'int',
'ppiFloortypeCdQ5Floortype' => 'int',
'ppiLightingsourceCdQ6Lightingsource' => 'int',
'ppiIronsCdQ7Irons' => 'int',
'ppiMosquitonetsCdQ8Mosquitonets' => 'int',
'ppiTowelsCdQ9Towels' => 'int',
'ppiFryingpansCdQ10Fryingpans' => 'int',
'date' => '\DateTime',
'dateFormat' => '\DateTime',
'locale' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'ppiHouseholdMembersCdQ1Householdmembers' => 'int64',
'ppiHighestschoolCdQ2Highestschool' => 'int64',
'ppiBusinessoccupationCdQ3Businessoccupation' => 'int64',
'ppiHabitableroomsCdQ4Habitablerooms' => 'int64',
'ppiFloortypeCdQ5Floortype' => 'int64',
'ppiLightingsourceCdQ6Lightingsource' => 'int64',
'ppiIronsCdQ7Irons' => 'int64',
'ppiMosquitonetsCdQ8Mosquitonets' => 'int64',
'ppiTowelsCdQ9Towels' => 'int64',
'ppiFryingpansCdQ10Fryingpans' => 'int64',
'date' => 'date-time',
'dateFormat' => 'date-time',
'locale' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'ppiHouseholdMembersCdQ1Householdmembers' => 'ppi_household_members_cd_q1_householdmembers',
'ppiHighestschoolCdQ2Highestschool' => 'ppi_highestschool_cd_q2_highestschool',
'ppiBusinessoccupationCdQ3Businessoccupation' => 'ppi_businessoccupation_cd_q3_businessoccupation',
'ppiHabitableroomsCdQ4Habitablerooms' => 'ppi_habitablerooms_cd_q4_habitablerooms',
'ppiFloortypeCdQ5Floortype' => 'ppi_floortype_cd_q5_floortype',
'ppiLightingsourceCdQ6Lightingsource' => 'ppi_lightingsource_cd_q6_lightingsource',
'ppiIronsCdQ7Irons' => 'ppi_irons_cd_q7_irons',
'ppiMosquitonetsCdQ8Mosquitonets' => 'ppi_mosquitonets_cd_q8_mosquitonets',
'ppiTowelsCdQ9Towels' => 'ppi_towels_cd_q9_towels',
'ppiFryingpansCdQ10Fryingpans' => 'ppi_fryingpans_cd_q10_fryingpans',
'date' => 'Date',
'dateFormat' => 'dateFormat',
'locale' => 'locale'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'ppiHouseholdMembersCdQ1Householdmembers' => 'setPpiHouseholdMembersCdQ1Householdmembers',
'ppiHighestschoolCdQ2Highestschool' => 'setPpiHighestschoolCdQ2Highestschool',
'ppiBusinessoccupationCdQ3Businessoccupation' => 'setPpiBusinessoccupationCdQ3Businessoccupation',
'ppiHabitableroomsCdQ4Habitablerooms' => 'setPpiHabitableroomsCdQ4Habitablerooms',
'ppiFloortypeCdQ5Floortype' => 'setPpiFloortypeCdQ5Floortype',
'ppiLightingsourceCdQ6Lightingsource' => 'setPpiLightingsourceCdQ6Lightingsource',
'ppiIronsCdQ7Irons' => 'setPpiIronsCdQ7Irons',
'ppiMosquitonetsCdQ8Mosquitonets' => 'setPpiMosquitonetsCdQ8Mosquitonets',
'ppiTowelsCdQ9Towels' => 'setPpiTowelsCdQ9Towels',
'ppiFryingpansCdQ10Fryingpans' => 'setPpiFryingpansCdQ10Fryingpans',
'date' => 'setDate',
'dateFormat' => 'setDateFormat',
'locale' => 'setLocale'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'ppiHouseholdMembersCdQ1Householdmembers' => 'getPpiHouseholdMembersCdQ1Householdmembers',
'ppiHighestschoolCdQ2Highestschool' => 'getPpiHighestschoolCdQ2Highestschool',
'ppiBusinessoccupationCdQ3Businessoccupation' => 'getPpiBusinessoccupationCdQ3Businessoccupation',
'ppiHabitableroomsCdQ4Habitablerooms' => 'getPpiHabitableroomsCdQ4Habitablerooms',
'ppiFloortypeCdQ5Floortype' => 'getPpiFloortypeCdQ5Floortype',
'ppiLightingsourceCdQ6Lightingsource' => 'getPpiLightingsourceCdQ6Lightingsource',
'ppiIronsCdQ7Irons' => 'getPpiIronsCdQ7Irons',
'ppiMosquitonetsCdQ8Mosquitonets' => 'getPpiMosquitonetsCdQ8Mosquitonets',
'ppiTowelsCdQ9Towels' => 'getPpiTowelsCdQ9Towels',
'ppiFryingpansCdQ10Fryingpans' => 'getPpiFryingpansCdQ10Fryingpans',
'date' => 'getDate',
'dateFormat' => 'getDateFormat',
'locale' => 'getLocale'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ppiHouseholdMembersCdQ1Householdmembers'] = isset($data['ppiHouseholdMembersCdQ1Householdmembers']) ? $data['ppiHouseholdMembersCdQ1Householdmembers'] : null;
        $this->container['ppiHighestschoolCdQ2Highestschool'] = isset($data['ppiHighestschoolCdQ2Highestschool']) ? $data['ppiHighestschoolCdQ2Highestschool'] : null;
        $this->container['ppiBusinessoccupationCdQ3Businessoccupation'] = isset($data['ppiBusinessoccupationCdQ3Businessoccupation']) ? $data['ppiBusinessoccupationCdQ3Businessoccupation'] : null;
        $this->container['ppiHabitableroomsCdQ4Habitablerooms'] = isset($data['ppiHabitableroomsCdQ4Habitablerooms']) ? $data['ppiHabitableroomsCdQ4Habitablerooms'] : null;
        $this->container['ppiFloortypeCdQ5Floortype'] = isset($data['ppiFloortypeCdQ5Floortype']) ? $data['ppiFloortypeCdQ5Floortype'] : null;
        $this->container['ppiLightingsourceCdQ6Lightingsource'] = isset($data['ppiLightingsourceCdQ6Lightingsource']) ? $data['ppiLightingsourceCdQ6Lightingsource'] : null;
        $this->container['ppiIronsCdQ7Irons'] = isset($data['ppiIronsCdQ7Irons']) ? $data['ppiIronsCdQ7Irons'] : null;
        $this->container['ppiMosquitonetsCdQ8Mosquitonets'] = isset($data['ppiMosquitonetsCdQ8Mosquitonets']) ? $data['ppiMosquitonetsCdQ8Mosquitonets'] : null;
        $this->container['ppiTowelsCdQ9Towels'] = isset($data['ppiTowelsCdQ9Towels']) ? $data['ppiTowelsCdQ9Towels'] : null;
        $this->container['ppiFryingpansCdQ10Fryingpans'] = isset($data['ppiFryingpansCdQ10Fryingpans']) ? $data['ppiFryingpansCdQ10Fryingpans'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['dateFormat'] = isset($data['dateFormat']) ? $data['dateFormat'] : null;
        $this->container['locale'] = isset($data['locale']) ? $data['locale'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets ppiHouseholdMembersCdQ1Householdmembers
     *
     * @return int
     */
    public function getPpiHouseholdMembersCdQ1Householdmembers()
    {
        return $this->container['ppiHouseholdMembersCdQ1Householdmembers'];
    }

    /**
     * Sets ppiHouseholdMembersCdQ1Householdmembers
     *
     * @param int $ppiHouseholdMembersCdQ1Householdmembers ppiHouseholdMembersCdQ1Householdmembers
     *
     * @return $this
     */
    public function setPpiHouseholdMembersCdQ1Householdmembers($ppiHouseholdMembersCdQ1Householdmembers)
    {
        $this->container['ppiHouseholdMembersCdQ1Householdmembers'] = $ppiHouseholdMembersCdQ1Householdmembers;

        return $this;
    }

    /**
     * Gets ppiHighestschoolCdQ2Highestschool
     *
     * @return int
     */
    public function getPpiHighestschoolCdQ2Highestschool()
    {
        return $this->container['ppiHighestschoolCdQ2Highestschool'];
    }

    /**
     * Sets ppiHighestschoolCdQ2Highestschool
     *
     * @param int $ppiHighestschoolCdQ2Highestschool ppiHighestschoolCdQ2Highestschool
     *
     * @return $this
     */
    public function setPpiHighestschoolCdQ2Highestschool($ppiHighestschoolCdQ2Highestschool)
    {
        $this->container['ppiHighestschoolCdQ2Highestschool'] = $ppiHighestschoolCdQ2Highestschool;

        return $this;
    }

    /**
     * Gets ppiBusinessoccupationCdQ3Businessoccupation
     *
     * @return int
     */
    public function getPpiBusinessoccupationCdQ3Businessoccupation()
    {
        return $this->container['ppiBusinessoccupationCdQ3Businessoccupation'];
    }

    /**
     * Sets ppiBusinessoccupationCdQ3Businessoccupation
     *
     * @param int $ppiBusinessoccupationCdQ3Businessoccupation ppiBusinessoccupationCdQ3Businessoccupation
     *
     * @return $this
     */
    public function setPpiBusinessoccupationCdQ3Businessoccupation($ppiBusinessoccupationCdQ3Businessoccupation)
    {
        $this->container['ppiBusinessoccupationCdQ3Businessoccupation'] = $ppiBusinessoccupationCdQ3Businessoccupation;

        return $this;
    }

    /**
     * Gets ppiHabitableroomsCdQ4Habitablerooms
     *
     * @return int
     */
    public function getPpiHabitableroomsCdQ4Habitablerooms()
    {
        return $this->container['ppiHabitableroomsCdQ4Habitablerooms'];
    }

    /**
     * Sets ppiHabitableroomsCdQ4Habitablerooms
     *
     * @param int $ppiHabitableroomsCdQ4Habitablerooms ppiHabitableroomsCdQ4Habitablerooms
     *
     * @return $this
     */
    public function setPpiHabitableroomsCdQ4Habitablerooms($ppiHabitableroomsCdQ4Habitablerooms)
    {
        $this->container['ppiHabitableroomsCdQ4Habitablerooms'] = $ppiHabitableroomsCdQ4Habitablerooms;

        return $this;
    }

    /**
     * Gets ppiFloortypeCdQ5Floortype
     *
     * @return int
     */
    public function getPpiFloortypeCdQ5Floortype()
    {
        return $this->container['ppiFloortypeCdQ5Floortype'];
    }

    /**
     * Sets ppiFloortypeCdQ5Floortype
     *
     * @param int $ppiFloortypeCdQ5Floortype ppiFloortypeCdQ5Floortype
     *
     * @return $this
     */
    public function setPpiFloortypeCdQ5Floortype($ppiFloortypeCdQ5Floortype)
    {
        $this->container['ppiFloortypeCdQ5Floortype'] = $ppiFloortypeCdQ5Floortype;

        return $this;
    }

    /**
     * Gets ppiLightingsourceCdQ6Lightingsource
     *
     * @return int
     */
    public function getPpiLightingsourceCdQ6Lightingsource()
    {
        return $this->container['ppiLightingsourceCdQ6Lightingsource'];
    }

    /**
     * Sets ppiLightingsourceCdQ6Lightingsource
     *
     * @param int $ppiLightingsourceCdQ6Lightingsource ppiLightingsourceCdQ6Lightingsource
     *
     * @return $this
     */
    public function setPpiLightingsourceCdQ6Lightingsource($ppiLightingsourceCdQ6Lightingsource)
    {
        $this->container['ppiLightingsourceCdQ6Lightingsource'] = $ppiLightingsourceCdQ6Lightingsource;

        return $this;
    }

    /**
     * Gets ppiIronsCdQ7Irons
     *
     * @return int
     */
    public function getPpiIronsCdQ7Irons()
    {
        return $this->container['ppiIronsCdQ7Irons'];
    }

    /**
     * Sets ppiIronsCdQ7Irons
     *
     * @param int $ppiIronsCdQ7Irons ppiIronsCdQ7Irons
     *
     * @return $this
     */
    public function setPpiIronsCdQ7Irons($ppiIronsCdQ7Irons)
    {
        $this->container['ppiIronsCdQ7Irons'] = $ppiIronsCdQ7Irons;

        return $this;
    }

    /**
     * Gets ppiMosquitonetsCdQ8Mosquitonets
     *
     * @return int
     */
    public function getPpiMosquitonetsCdQ8Mosquitonets()
    {
        return $this->container['ppiMosquitonetsCdQ8Mosquitonets'];
    }

    /**
     * Sets ppiMosquitonetsCdQ8Mosquitonets
     *
     * @param int $ppiMosquitonetsCdQ8Mosquitonets ppiMosquitonetsCdQ8Mosquitonets
     *
     * @return $this
     */
    public function setPpiMosquitonetsCdQ8Mosquitonets($ppiMosquitonetsCdQ8Mosquitonets)
    {
        $this->container['ppiMosquitonetsCdQ8Mosquitonets'] = $ppiMosquitonetsCdQ8Mosquitonets;

        return $this;
    }

    /**
     * Gets ppiTowelsCdQ9Towels
     *
     * @return int
     */
    public function getPpiTowelsCdQ9Towels()
    {
        return $this->container['ppiTowelsCdQ9Towels'];
    }

    /**
     * Sets ppiTowelsCdQ9Towels
     *
     * @param int $ppiTowelsCdQ9Towels ppiTowelsCdQ9Towels
     *
     * @return $this
     */
    public function setPpiTowelsCdQ9Towels($ppiTowelsCdQ9Towels)
    {
        $this->container['ppiTowelsCdQ9Towels'] = $ppiTowelsCdQ9Towels;

        return $this;
    }

    /**
     * Gets ppiFryingpansCdQ10Fryingpans
     *
     * @return int
     */
    public function getPpiFryingpansCdQ10Fryingpans()
    {
        return $this->container['ppiFryingpansCdQ10Fryingpans'];
    }

    /**
     * Sets ppiFryingpansCdQ10Fryingpans
     *
     * @param int $ppiFryingpansCdQ10Fryingpans ppiFryingpansCdQ10Fryingpans
     *
     * @return $this
     */
    public function setPpiFryingpansCdQ10Fryingpans($ppiFryingpansCdQ10Fryingpans)
    {
        $this->container['ppiFryingpansCdQ10Fryingpans'] = $ppiFryingpansCdQ10Fryingpans;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets dateFormat
     *
     * @return \DateTime
     */
    public function getDateFormat()
    {
        return $this->container['dateFormat'];
    }

    /**
     * Sets dateFormat
     *
     * @param \DateTime $dateFormat dateFormat
     *
     * @return $this
     */
    public function setDateFormat($dateFormat)
    {
        $this->container['dateFormat'] = $dateFormat;

        return $this;
    }

    /**
     * Gets locale
     *
     * @return string
     */
    public function getLocale()
    {
        return $this->container['locale'];
    }

    /**
     * Sets locale
     *
     * @param string $locale locale
     *
     * @return $this
     */
    public function setLocale($locale)
    {
        $this->container['locale'] = $locale;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
